  Regression.cpp
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): note: see declaration of 'c10::Error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(30): warning C4251: 'c10::Error::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): warning C4251: 'c10::Error::context_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Error'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(40): warning C4251: 'c10::Error::backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(47): warning C4251: 'c10::Error::what_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(48): warning C4251: 'c10::Error::what_without_backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(54): warning C4251: 'c10::ThreadLocalDebugInfo::info_': class 'std::shared_ptr<c10::DebugInfoBase>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(35): note: see declaration of 'std::shared_ptr<c10::DebugInfoBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(56): warning C4251: 'c10::ThreadLocalDebugInfo::parent_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(82): warning C4251: 'c10::DebugInfoGuard::prev_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::DebugInfoGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(22): warning C4251: 'c10::DataPtr::ptr_': class 'c10::detail::UniqueVoidPtr' needs to have dll-interface to be used by clients of class 'c10::DataPtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\uniquevoidptr.h(38): note: see declaration of 'c10::detail::UniqueVoidPtr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): warning C4251: 'c10::InefficientStdFunctionContext::ptr_': class 'std::unique_ptr<void,std::function<void (void *)>>' needs to have dll-interface to be used by clients of struct 'c10::InefficientStdFunctionContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): note: see declaration of 'std::unique_ptr<void,std::function<void (void *)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(550): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(556): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(563): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(569): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(173): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(176): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(179): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(182): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(186): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(189): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(192): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(195): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(201): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(204): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(207): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(210): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(214): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(217): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(220): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(223): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(148): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(151): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(154): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(157): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(161): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(164): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(167): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(170): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(176): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(179): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(182): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(185): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(189): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(192): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(195): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(198): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeid.h(68): warning C4251: 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_': struct 'c10::util::type_index' needs to have dll-interface to be used by clients of class 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeindex.h(57): note: see declaration of 'c10::util::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(137): warning C4251: 'c10::Scalar::v': union 'c10::Scalar::v_t' needs to have dll-interface to be used by clients of class 'c10::Scalar'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(132): note: see declaration of 'c10::Scalar::v_t'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(66): warning C4251: 'c10::intrusive_ptr_target::refcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(67): warning C4251: 'c10::intrusive_ptr_target::weakcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(151): warning C4251: 'c10::Storage::storage_impl_': class 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::Storage'
          with
          [
              TTarget=c10::StorageImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(12): note: see declaration of 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::StorageImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(53): warning C4251: 'c10::impl::LocalDispatchKeySet::included_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(54): warning C4251: 'c10::impl::LocalDispatchKeySet::excluded_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(77): warning C4251: 'c10::impl::IncludeDispatchKeyGuard::include_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::IncludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(93): warning C4251: 'c10::impl::ExcludeDispatchKeyGuard::exclude_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::ExcludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\logging_is_not_google_glog.h(43): warning C4251: 'c10::MessageLogger::stream_': class 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::MessageLogger'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\iosfwd(623): note: see declaration of 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): warning C4251: 'c10::VariableVersion::version_counter_': class 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::VariableVersion'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): note: see declaration of 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1614): warning C4251: 'c10::TensorImpl::autograd_meta_': class 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(152): note: see declaration of 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1617): warning C4251: 'c10::TensorImpl::named_tensor_meta_': class 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(171): note: see declaration of 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): warning C4251: 'c10::TensorImpl::sizes_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1640): warning C4251: 'c10::TensorImpl::strides_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1665): warning C4251: 'c10::TensorImpl::device_opt_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1672): warning C4251: 'c10::TensorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1040): warning C4244: 'argument': conversion from 'float' to 'const _Ty', possible loss of data
          with
          [
              _Ty=uint64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1391): warning C4244: 'initializing': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(26): warning C4251: 'at::DeprecatedTypePropertiesRegistry::registry': class 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'at::DeprecatedTypePropertiesRegistry'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(24): note: see declaration of 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(77): warning C4251: 'c10::GeneratorImpl::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(91): warning C4251: 'c10::GeneratorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\generator.h(120): warning C4251: 'at::Generator::impl_': class 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'at::Generator'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(68): note: see declaration of 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(67): warning C4251: 'at::NamedTensorMeta::names_': class 'std::vector<at::Dimname,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::NamedTensorMeta'
          with
          [
              _Ty=at::Dimname
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(33): note: see declaration of 'std::vector<at::Dimname,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Dimname
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1318): warning C4251: 'at::Tensor::impl_': class 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>' needs to have dll-interface to be used by clients of class 'at::Tensor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(87): note: see declaration of 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1319): warning C4522: 'at::Tensor': multiple assignment operators specified
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(32): warning C4251: 'at::CPUGeneratorImpl::engine_': class 'at::mt19937_engine' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\mt19937rngengine.h(108): note: see declaration of 'at::mt19937_engine'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(33): warning C4251: 'at::CPUGeneratorImpl::next_float_normal_sample_': class 'c10::optional<float>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(23): note: see declaration of 'c10::optional<float>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(34): warning C4251: 'at::CPUGeneratorImpl::next_double_normal_sample_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::DeviceIndex', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::StreamId', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(209): warning C4251: 'at::Context::thc_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(210): warning C4251: 'at::Context::thh_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): warning C4251: 'at::Context::quantized_engine': class 'c10::optional<c10::QEngine>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): note: see declaration of 'c10::optional<c10::QEngine>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(224): warning C4251: 'at::Context::thc_state': class 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\cudahooksinterface.h(76): note: see declaration of 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(225): warning C4251: 'at::Context::thh_state': class 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\hiphooksinterface.h(33): note: see declaration of 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(56): warning C4251: 'at::TensorGeometry::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(57): warning C4251: 'at::TensorGeometry::strides_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(869): warning C4251: 'c10::StrongTypePtr::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(870): warning C4251: 'c10::StrongTypePtr::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dict_inl.h(41): warning C4244: 'argument': conversion from 'int64_t' to 'const _Kty', possible loss of data
          with
          [
              _Kty=int
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(80): warning C4251: 'std::enable_shared_from_this<c10::Type>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<c10::Type>'
          with
          [
              _Ty=c10::Type
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=c10::Type
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(286): warning C4251: 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(370): warning C4251: 'c10::Stride::stride_index_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(371): warning C4251: 'c10::Stride::contiguous_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(372): warning C4251: 'c10::Stride::stride_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(434): warning C4251: 'c10::ShapeSymbol::num_symbols': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of struct 'c10::ShapeSymbol'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(525): warning C4251: 'c10::SymbolicShape::dims_': class 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::SymbolicShape'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(499): note: see declaration of 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(833): warning C4251: 'c10::TensorType::scalar_type_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(834): warning C4251: 'c10::TensorType::device_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(836): warning C4251: 'c10::TensorType::strides_': struct 'c10::VaryingShape<c10::Stride>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(623): note: see declaration of 'c10::VaryingShape<c10::Stride>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(837): warning C4251: 'c10::TensorType::requires_grad_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(849): warning C4251: 'c10::TensorType::undefined_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(683): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(686): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(857): warning C4251: 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(973): warning C4251: 'c10::DictType::types': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::DictType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(981): warning C4251: 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1023): warning C4251: 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1073): warning C4251: 'c10::NamedType::name_': class 'c10::optional<c10::QualifiedName>' needs to have dll-interface to be used by clients of struct 'c10::NamedType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1057): note: see declaration of 'c10::optional<c10::QualifiedName>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1156): warning C4251: 'c10::TupleType::elements_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1158): warning C4251: 'c10::TupleType::schema_': class 'std::shared_ptr<c10::FunctionSchema>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1124): note: see declaration of 'std::shared_ptr<c10::FunctionSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1240): warning C4251: 'c10::EnumType::value_type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1241): warning C4251: 'c10::EnumType::enum_names_values_': class 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
          with
          [
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1242): warning C4251: 'c10::EnumType::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1930): warning C4251: 'c10::ClassAttribute::attributeType_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1931): warning C4251: 'c10::ClassAttribute::attributeName_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2255): warning C4251: 'c10::ClassType::constantNames_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2256): warning C4251: 'c10::ClassType::constantValues_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2258): warning C4251: 'c10::ClassType::compilation_unit_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2261): warning C4251: 'c10::ClassType::attributes_': class 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassAttribute
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2188): note: see declaration of 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassAttribute
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2264): warning C4251: 'c10::ClassType::attributeTypes_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2267): warning C4251: 'c10::ClassType::methods_': class 'std::vector<torch::jit::Function *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=torch::jit::Function *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1973): note: see declaration of 'std::vector<torch::jit::Function *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Function *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): warning C4251: 'c10::ClassType::properties_': class 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassType::Property
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): note: see declaration of 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassType::Property
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): warning C4251: 'c10::InterfaceType::methods_': class 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::InterfaceType'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): note: see declaration of 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(168): warning C4251: 'c10::ivalue::ConstantString::str_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::ConstantString'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(188): warning C4251: 'c10::ivalue::Tuple::elements_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(189): warning C4251: 'c10::ivalue::Tuple::type_': class 'std::shared_ptr<c10::TupleType>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1090): note: see declaration of 'std::shared_ptr<c10::TupleType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): note: see declaration of 'c10::ivalue::Future::FutureError'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(264): warning C4251: 'c10::ivalue::Future::FutureError::error_msg': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(461): warning C4251: 'c10::ivalue::Future::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(462): warning C4251: 'c10::ivalue::Future::completed_': struct 'std::atomic<bool>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(463): warning C4251: 'c10::ivalue::Future::finished_cv_': class 'std::condition_variable' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(682): note: see declaration of 'std::condition_variable'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(466): warning C4251: 'c10::ivalue::Future::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): warning C4251: 'c10::ivalue::Future::callbacks_': class 'std::vector<std::function<void (void)>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
          with
          [
              _Ty=std::function<void (void)>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): note: see declaration of 'std::vector<std::function<void (void)>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::function<void (void)>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(468): warning C4251: 'c10::ivalue::Future::eptr_': class 'std::exception_ptr' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\exception(239): note: see declaration of 'std::exception_ptr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(389): warning C4101: 'e': unreferenced local variable
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(565): warning C4251: 'c10::ivalue::Object::slots_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Object'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(648): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(650): warning C4244: 'return': conversion from 'int64_t' to 'unsigned char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(651): warning C4244: 'return': conversion from 'int64_t' to 'signed char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(652): warning C4244: 'return': conversion from 'int64_t' to 'unsigned short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(653): warning C4244: 'return': conversion from 'int64_t' to 'short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(654): warning C4244: 'return': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(655): warning C4244: 'return': conversion from 'int64_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(657): warning C4244: 'return': conversion from 'int64_t' to 'c10::detail::_guarded_unsigned_long', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(40): warning C4251: 'at::namedinference::TensorName::origin_': class 'c10::ArrayRef<at::Dimname>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorName'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dimname.h(36): note: see declaration of 'c10::ArrayRef<at::Dimname>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(70): warning C4251: 'at::namedinference::TensorNames::names_': class 'c10::SmallVector<at::namedinference::TensorName,10>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorNames'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(49): note: see declaration of 'c10::SmallVector<at::namedinference::TensorName,10>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(190): warning C4251: 'torch::autograd::AutogradMeta::name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(193): warning C4251: 'torch::autograd::AutogradMeta::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(194): warning C4251: 'torch::autograd::AutogradMeta::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(196): warning C4251: 'torch::autograd::AutogradMeta::hooks_': class 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(174): note: see declaration of 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(197): warning C4251: 'torch::autograd::AutogradMeta::cpp_hooks_list': class 'std::shared_ptr<torch::autograd::hooks_list>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\cpp_hook.h(11): note: see declaration of 'std::shared_ptr<torch::autograd::hooks_list>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(216): warning C4251: 'torch::autograd::AutogradMeta::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): warning C4251: 'torch::autograd::DifferentiableViewMeta::view_fn_': class 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::DifferentiableViewMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): note: see declaration of 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): note: see declaration of 'torch::jit::GraphAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(121): warning C4251: 'torch::jit::GraphAttr::value_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphsAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): note: see declaration of 'torch::jit::GraphsAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(138): warning C4251: 'torch::jit::GraphsAttr::value_': class 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphsAttr'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(125): note: see declaration of 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(176): warning C4251: 'torch::jit::SourceRange::source_': class 'std::shared_ptr<torch::jit::Source>' needs to have dll-interface to be used by clients of struct 'torch::jit::SourceRange'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(110): note: see declaration of 'std::shared_ptr<torch::jit::Source>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(25): warning C4251: 'torch::jit::Scope::parent_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Scope'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): warning C4251: 'torch::jit::InlinedCallStack::callee_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::InlinedCallStack'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): warning C4275: non dll-interface class 'std::runtime_error' used as base for dll-interface struct 'torch::jit::constant_not_supported_error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\stdexcept(157): note: see declaration of 'std::runtime_error'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): note: see declaration of 'torch::jit::constant_not_supported_error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): warning C4251: 'c10::KernelFunction::functor_': class 'std::shared_ptr<c10::OperatorKernel>' needs to have dll-interface to be used by clients of class 'c10::KernelFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): note: see declaration of 'std::shared_ptr<c10::OperatorKernel>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(191): warning C4251: 'c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_': struct 'c10::utils::bitset' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bitset.h(23): note: see declaration of 'c10::utils::bitset'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(194): warning C4251: 'c10::DispatchKeyExtractor::nonFallthroughKeys_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\cppsignature.h(52): warning C4251: 'c10::impl::CppSignature::signature_': class 'std::type_index' needs to have dll-interface to be used by clients of class 'c10::impl::CppSignature'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\typeindex(16): note: see declaration of 'std::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(185): warning C4251: 'c10::impl::OperatorEntry::name_': struct 'c10::OperatorName' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\operator_name.h(14): note: see declaration of 'c10::OperatorName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): warning C4251: 'c10::impl::OperatorEntry::schema_': class 'c10::optional<c10::impl::AnnotatedSchema>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): note: see declaration of 'c10::optional<c10::impl::AnnotatedSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): warning C4251: 'c10::impl::OperatorEntry::manuallyBoxedKernel_': class 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): note: see declaration of 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): warning C4251: 'c10::impl::OperatorEntry::kernels_': class 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): note: see declaration of 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(230): warning C4251: 'c10::impl::OperatorEntry::catchAllKernel_': class 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(117): note: see declaration of 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(231): warning C4251: 'c10::impl::OperatorEntry::missingKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(232): warning C4251: 'c10::impl::OperatorEntry::ambiguousAutogradOtherKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(239): warning C4251: 'c10::impl::OperatorEntry::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): warning C4251: 'at::StringView::owned_str_ptr_': class 'std::shared_ptr<std::string>' needs to have dll-interface to be used by clients of struct 'at::StringView'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): note: see declaration of 'std::shared_ptr<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(196): warning C4251: 'at::RecordFunction::sorted_active_tls_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(197): warning C4251: 'at::RecordFunction::sorted_active_global_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(201): warning C4251: 'at::RecordFunction::tls_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(205): warning C4251: 'at::RecordFunction::global_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(214): warning C4251: 'at::RecordFunction::inputs_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(339): warning C4251: 'at::RecordFunctionCallback::start_': class 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(256): note: see declaration of 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(340): warning C4251: 'at::RecordFunctionCallback::end_': class 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(257): note: see declaration of 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(341): warning C4251: 'at::RecordFunctionCallback::should_run_': class 'std::function<bool (const at::RecordFunctionCallback &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(306): note: see declaration of 'std::function<bool (const at::RecordFunctionCallback &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(494): warning C4251: 'at::RecordFunctionTLS::sorted_tls_callbacks_': class 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunctionTLS'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(400): note: see declaration of 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): warning C4251: 'c10::Dispatcher::operators_': class 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): note: see declaration of 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): warning C4251: 'c10::Dispatcher::operatorLookupTable_': class 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): note: see declaration of 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): warning C4251: 'c10::Dispatcher::libraries_': class 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): note: see declaration of 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): warning C4251: 'c10::Dispatcher::listeners_': class 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): note: see declaration of 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(240): warning C4251: 'c10::Dispatcher::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(305): warning C4251: 'c10::OperatorHandle::operatorIterator_': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' needs to have dll-interface to be used by clients of class 'c10::OperatorHandle'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\list(457): note: see declaration of 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): warning C4251: 'c10::RegisterOperators::Options::schemaOrName_': class 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): note: see declaration of 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): warning C4251: 'c10::RegisterOperators::Options::kernels': class 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): note: see declaration of 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(430): warning C4251: 'c10::RegisterOperators::Options::aliasAnalysisKind_': class 'c10::optional<c10::AliasAnalysisKind>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(190): note: see declaration of 'c10::optional<c10::AliasAnalysisKind>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): warning C4251: 'c10::RegisterOperators::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(179): warning C4251: 'torch::CppFunction::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(181): warning C4251: 'torch::CppFunction::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(182): warning C4251: 'torch::CppFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(183): warning C4251: 'torch::CppFunction::debug_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(585): warning C4251: 'torch::Library::ns_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(586): warning C4251: 'torch::Library::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(590): warning C4251: 'torch::Library::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::Library'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): warning C4251: 'torch::jit::Operator::op_': class 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>' needs to have dll-interface to be used by clients of struct 'torch::jit::Operator'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): note: see declaration of 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(260): warning C4251: 'torch::jit::Node::inputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(261): warning C4251: 'torch::jit::Node::outputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): warning C4251: 'torch::jit::Node::blocks_': class 'std::vector<torch::jit::Block *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Block *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): note: see declaration of 'std::vector<torch::jit::Block *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Block *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(266): warning C4251: 'torch::jit::Node::source_range_': class 'c10::optional<torch::jit::SourceRange>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(85): note: see declaration of 'c10::optional<torch::jit::SourceRange>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(267): warning C4251: 'torch::jit::Node::scope_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(268): warning C4251: 'torch::jit::Node::callstack_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): warning C4251: 'torch::jit::Node::values_': class 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): note: see declaration of 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(1365): warning C4251: 'torch::jit::ProfileOptionalOp::callback_': class 'std::function<void (torch::jit::Stack &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::ProfileOptionalOp'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\builtin_function.h(13): note: see declaration of 'std::function<void (torch::jit::Stack &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): warning C4251: 'torch::jit::ArgumentSpecCreator::instructions_': class 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::ArgumentSpecCreator'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): note: see declaration of 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'const int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(241): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(260): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(432): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\threadlocalstate.h(31): warning C4251: 'at::ThreadLocalState::debug_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'at::ThreadLocalState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): warning C4251: 'torch::jit::Code::pImpl': class 'std::shared_ptr<torch::jit::CodeImpl>' needs to have dll-interface to be used by clients of struct 'torch::jit::Code'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): note: see declaration of 'std::shared_ptr<torch::jit::CodeImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): warning C4251: 'torch::jit::GraphExecutor::pImpl': class 'std::shared_ptr<torch::jit::GraphExecutorImplBase>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphExecutor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): note: see declaration of 'std::shared_ptr<torch::jit::GraphExecutorImplBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(115): warning C4251: 'torch::jit::GraphFunction::name_': struct 'c10::QualifiedName' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\qualified_name.h(11): note: see declaration of 'c10::QualifiedName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(117): warning C4251: 'torch::jit::GraphFunction::graph_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): warning C4251: 'torch::jit::GraphFunction::optimized_graph_': class 'c10::optional<std::shared_ptr<torch::jit::Graph>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): note: see declaration of 'c10::optional<std::shared_ptr<torch::jit::Graph>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(129): warning C4251: 'torch::jit::GraphFunction::compile_mutex': class 'std::recursive_mutex' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(95): note: see declaration of 'std::recursive_mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(136): warning C4251: 'torch::jit::GraphFunction::function_creator_': class 'std::function<void (torch::jit::GraphFunction &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(15): note: see declaration of 'std::function<void (torch::jit::GraphFunction &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(141): warning C4251: 'torch::jit::GraphFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\method.h(57): warning C4251: 'torch::jit::Method::owner_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Method'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\object.h(136): warning C4251: 'torch::jit::Object::_ivalue_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Object'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(43): warning C4251: 'std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::jit::tracer::TracingState>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(47): warning C4251: 'torch::jit::tracer::TracingState::graph': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(52): warning C4251: 'torch::jit::tracer::TracingState::lookup_var_name_fn': class 'std::function<std::string (const torch::autograd::Variable &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(51): note: see declaration of 'std::function<std::string (const torch::autograd::Variable &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): warning C4251: 'torch::jit::tracer::TracingState::env_stack': class 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): note: see declaration of 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(181): warning C4251: 'torch::jit::tracer::NoWarn::state': class 'std::shared_ptr<_Ty>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::NoWarn'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2019): note: see declaration of 'std::shared_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(96): warning C4251: 'torch::data::samplers::DistributedRandomSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedRandomSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(129): warning C4251: 'torch::data::samplers::DistributedSequentialSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedSequentialSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): warning C4251: 'torch::jit::CompilationUnit::functions_': class 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=torch::jit::Function
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): note: see declaration of 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::jit::Function
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): warning C4251: 'torch::jit::CompilationUnit::dict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(291): warning C4251: 'torch::jit::CompilationUnit::classDict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): warning C4251: 'torch::jit::CompilationUnit::classes_': class 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): note: see declaration of 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\input-archive.h(110): warning C4251: 'torch::serialize::InputArchive::hierarchy_prefix_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::serialize::InputArchive'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\output-archive.h(76): warning C4251: 'torch::serialize::OutputArchive::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of class 'torch::serialize::OutputArchive'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(64): warning C4251: 'std::enable_shared_from_this<torch::nn::Module>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::nn::Module>'
          with
          [
              _Ty=torch::nn::Module
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::nn::Module
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(543): warning C4251: 'torch::nn::Module::parameters_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(591): warning C4251: 'torch::nn::Module::buffers_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(594): warning C4251: 'torch::nn::Module::children_': class 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(248): note: see declaration of 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(597): warning C4251: 'torch::nn::Module::name_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(24): warning C4251: 'torch::nn::BatchNormOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::BatchNormOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(81): warning C4251: 'torch::nn::functional::BatchNormFuncOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::BatchNormFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(25): warning C4251: 'torch::nn::EmbeddingOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(27): warning C4251: 'torch::nn::EmbeddingOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(46): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(48): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(70): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(72): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(101): warning C4251: 'torch::nn::EmbeddingBagOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(109): warning C4251: 'torch::nn::EmbeddingBagOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(128): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(136): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(162): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(170): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(25): warning C4251: 'torch::nn::FoldOptions::output_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(28): warning C4251: 'torch::nn::FoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(32): warning C4251: 'torch::nn::FoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(36): warning C4251: 'torch::nn::FoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(39): warning C4251: 'torch::nn::FoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(69): warning C4251: 'torch::nn::UnfoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(73): warning C4251: 'torch::nn::UnfoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(77): warning C4251: 'torch::nn::UnfoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(80): warning C4251: 'torch::nn::UnfoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(223): warning C4251: 'torch::nn::functional::SoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(263): warning C4251: 'torch::nn::functional::SoftminFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftminFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(303): warning C4251: 'torch::nn::functional::LogSoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LogSoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(65): warning C4251: 'torch::nn::UnflattenOptions::dimname_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(67): warning C4251: 'torch::nn::UnflattenOptions::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(69): warning C4251: 'torch::nn::UnflattenOptions::namedshape_': class 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(56): note: see declaration of 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(643): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(665): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(675): warning C4244: '=': conversion from 'T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(23): warning C4251: 'torch::nn::L1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::L1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(55): warning C4251: 'torch::nn::KLDivLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>' needs to have dll-interface to be used by clients of struct 'torch::nn::KLDivLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(49): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(90): warning C4251: 'torch::nn::MSELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MSELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(122): warning C4251: 'torch::nn::BCELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(154): warning C4251: 'torch::nn::HingeEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::HingeEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(195): warning C4251: 'torch::nn::MultiMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(228): warning C4251: 'torch::nn::CosineEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CosineEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(262): warning C4251: 'torch::nn::MultiLabelMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(296): warning C4251: 'torch::nn::SoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(333): warning C4251: 'torch::nn::MultiLabelSoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelSoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(372): warning C4251: 'torch::nn::TripletMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::TripletMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(403): warning C4251: 'torch::nn::CTCLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CTCLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(441): warning C4251: 'torch::nn::SmoothL1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SmoothL1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(479): warning C4251: 'torch::nn::PoissonNLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::PoissonNLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(510): warning C4251: 'torch::nn::MarginRankingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MarginRankingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(546): warning C4251: 'torch::nn::NLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::NLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(581): warning C4251: 'torch::nn::CrossEntropyLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CrossEntropyLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(612): warning C4251: 'torch::nn::BCEWithLogitsLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCEWithLogitsLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(20): warning C4251: 'torch::nn::LayerNormOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::LayerNormOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(43): warning C4251: 'torch::nn::functional::LayerNormFuncOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LayerNormFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(133): warning C4251: 'torch::nn::functional::NormalizeFuncOptions::out_': class 'c10::optional<at::Tensor>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::NormalizeFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(561): note: see declaration of 'c10::optional<at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(23): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<D>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see reference to class template instantiation 'c10::ArrayRef<int64_t>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(57): note: see reference to class template instantiation 'std::initializer_list<c10::DispatchKey>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(55): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(95): warning C4251: 'torch::nn::ZeroPad2dOptions::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ZeroPad2dOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(115): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(162): warning C4251: 'torch::nn::functional::PadFuncOptions::pad_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(165): warning C4251: 'torch::nn::functional::PadFuncOptions::mode_': class 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(153): note: see declaration of 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\padding.h(14): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(963): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(964): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(23): warning C4251: 'torch::nn::UpsampleOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): warning C4251: 'torch::nn::UpsampleOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(36): warning C4251: 'torch::nn::UpsampleOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(30): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(42): warning C4251: 'torch::nn::UpsampleOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(64): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(67): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(71): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(55): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(82): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(93): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(24): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::mode_': class 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(20): note: see declaration of 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(26): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::padding_mode_': class 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(21): note: see declaration of 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(28): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(94): warning C4251: 'torch::nn::FunctionalImpl::function_': class 'std::function<at::Tensor (at::Tensor)>' needs to have dll-interface to be used by clients of class 'torch::nn::FunctionalImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): note: see declaration of 'std::function<at::Tensor (at::Tensor)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\adaptive.h(26): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::AdaptiveLogSoftmaxWithLossOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(71): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(81): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::head': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(83): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(44): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(69): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(115): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(140): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(165): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(248): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(273): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(298): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options': struct 'torch::nn::AvgPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(42): note: see declaration of 'torch::nn::AvgPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(44): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options': struct 'torch::nn::AvgPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(50): note: see declaration of 'torch::nn::AvgPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(70): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options': struct 'torch::nn::AvgPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(58): note: see declaration of 'torch::nn::AvgPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(96): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options': struct 'torch::nn::MaxPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(132): note: see declaration of 'torch::nn::MaxPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(141): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options': struct 'torch::nn::MaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(140): note: see declaration of 'torch::nn::MaxPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(171): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options': struct 'torch::nn::MaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(148): note: see declaration of 'torch::nn::MaxPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(201): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(227): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(239): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(201): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(255): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(209): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(287): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(217): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(319): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(346): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(358): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(270): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(278): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(402): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(286): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(430): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(354): note: see declaration of 'torch::nn::MaxUnpoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(476): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(362): note: see declaration of 'torch::nn::MaxUnpoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(505): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(370): note: see declaration of 'torch::nn::MaxUnpoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(534): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(581): warning C4251: 'torch::nn::FractionalMaxPool2dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool2dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(452): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(624): warning C4251: 'torch::nn::FractionalMaxPool3dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool3dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(460): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options': struct 'torch::nn::LPPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(510): note: see declaration of 'torch::nn::LPPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(667): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options': struct 'torch::nn::LPPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(518): note: see declaration of 'torch::nn::LPPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(695): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(23): warning C4251: 'torch::nn::detail::RNNOptionsBase::mode_': class 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::detail::RNNOptionsBase'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(15): note: see declaration of 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(66): warning C4251: 'torch::nn::RNNOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(179): warning C4251: 'torch::nn::RNNCellOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNCellOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(99): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(143): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(193): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(821): warning C4251: 'torch::nn::MultiheadAttentionImpl::out_proj': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::MultiheadAttentionImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(338): warning C4251: 'torch::autograd::profiler::Event::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\wrapdimutils.h(25): note: see declaration of 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(342): warning C4251: 'torch::autograd::profiler::Event::cuda_event': class 'std::shared_ptr<CUevent_st>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(24): note: see declaration of 'std::shared_ptr<CUevent_st>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(348): warning C4251: 'torch::autograd::profiler::Event::stack_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(189): warning C4244: 'initializing': conversion from 'double' to 'int64_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): warning C4251: 'torch::autograd::profiler::RecordProfile::file_': class 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::RecordProfile'
          with
          [
              _Ty=std::ofstream
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): note: see declaration of 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>'
          with
          [
              _Ty=std::ofstream
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(456): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::cb_': class 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(436): note: see declaration of 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(457): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::profilerDisableOptions_': class 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(395): note: see declaration of 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(47): warning C4251: 'torch::autograd::SavedVariable::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(50): warning C4251: 'torch::autograd::SavedVariable::weak_grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(51): warning C4251: 'torch::autograd::SavedVariable::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(98): warning C4251: 'std::enable_shared_from_this<torch::autograd::Node>::_Wptr': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::autograd::Node>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(426): warning C4251: 'torch::autograd::Node::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(428): warning C4251: 'torch::autograd::Node::next_edges_': class 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::Edge
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(33): note: see declaration of 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::Edge
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): warning C4251: 'torch::autograd::Node::anomaly_metadata_': class 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): note: see declaration of 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(431): warning C4251: 'torch::autograd::Node::pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(336): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(432): warning C4251: 'torch::autograd::Node::post_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(312): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): warning C4251: 'torch::autograd::Node::input_metadata_': class 'c10::SmallVector<torch::autograd::InputMetadata,2>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): note: see declaration of 'c10::SmallVector<torch::autograd::InputMetadata,2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(173): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(179): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(186): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(192): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(247): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): warning C4251: 'torch::autograd::AutogradContext::saved_data': class 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): note: see declaration of 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(122): warning C4251: 'torch::autograd::AutogradContext::non_differentiable_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(123): warning C4251: 'torch::autograd::AutogradContext::dirty_inputs_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(124): warning C4251: 'torch::autograd::AutogradContext::saved_variables_': class 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(34): note: see declaration of 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(125): warning C4251: 'torch::autograd::AutogradContext::to_save_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(131): warning C4251: 'torch::autograd::AutogradContext::grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(147): warning C4251: 'torch::autograd::VariableInfo::size': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::VariableInfo'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(36): warning C4251: 'torch::nn::TransformerEncoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(67): warning C4251: 'torch::nn::TransformerDecoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(59): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(62): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(65): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(68): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(71): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(73): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(76): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(78): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(136): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(139): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(142): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(145): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::multihead_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(148): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(151): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(154): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(157): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(160): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(163): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout3': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(166): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm3': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(28): warning C4251: 'torch::nn::TransformerEncoderOptions::encoder_layer_': class 'torch::nn::TransformerEncoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(87): note: see declaration of 'torch::nn::TransformerEncoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(34): warning C4251: 'torch::nn::TransformerEncoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(57): warning C4251: 'torch::nn::TransformerDecoderOptions::decoder_layer_': class 'torch::nn::TransformerDecoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(185): note: see declaration of 'torch::nn::TransformerDecoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(63): warning C4251: 'torch::nn::TransformerDecoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(56): warning C4251: 'torch::nn::TransformerEncoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(59): warning C4251: 'torch::nn::TransformerEncoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(118): warning C4251: 'torch::nn::TransformerDecoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(121): warning C4251: 'torch::nn::TransformerDecoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(50): warning C4251: 'torch::nn::TransformerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(53): warning C4251: 'torch::nn::TransformerOptions::custom_encoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(56): warning C4251: 'torch::nn::TransformerOptions::custom_decoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(125): warning C4251: 'torch::nn::TransformerImpl::encoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(128): warning C4251: 'torch::nn::TransformerImpl::decoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(80): warning C4251: 'torch::optim::OptimizerParamGroup::params_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(81): warning C4251: 'torch::optim::OptimizerParamGroup::options_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(147): warning C4251: 'torch::optim::Optimizer::param_groups_': class 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(91): note: see declaration of 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(148): warning C4251: 'torch::optim::Optimizer::state_': class 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(135): note: see declaration of 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(149): warning C4251: 'torch::optim::Optimizer::defaults_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adam.h(25): warning C4251: 'torch::optim::AdamOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adamw.h(25): warning C4251: 'torch::optim::AdamWOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamWOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(21): warning C4251: 'torch::optim::LBFGSOptions::max_eval_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(25): warning C4251: 'torch::optim::LBFGSOptions::line_search_fn_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): warning C4251: 'torch::optim::LBFGSParamState::old_dirs_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(42): warning C4251: 'torch::optim::LBFGSParamState::old_stps_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(43): warning C4251: 'torch::optim::LBFGSParamState::ro_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): warning C4251: 'torch::optim::LBFGSParamState::al_': class 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): note: see declaration of 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(74): warning C4251: 'torch::optim::LBFGS::_numel_cache': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of class 'torch::optim::LBFGS'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(180): warning C4251: 'caffe2::serialize::PyTorchStreamReader::ar_': class 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
          with
          [
              _Ty=mz_zip_archive
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(180): note: see declaration of 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>'
          with
          [
              _Ty=mz_zip_archive
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(181): warning C4251: 'caffe2::serialize::PyTorchStreamReader::archive_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(182): warning C4251: 'caffe2::serialize::PyTorchStreamReader::archive_name_plus_slash_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(183): warning C4251: 'caffe2::serialize::PyTorchStreamReader::in_': class 'std::unique_ptr<caffe2::serialize::ReadAdapterInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
          with
          [
              _Ty=caffe2::serialize::ReadAdapterInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(159): note: see declaration of 'std::unique_ptr<caffe2::serialize::ReadAdapterInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=caffe2::serialize::ReadAdapterInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(216): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::ar_': class 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
          with
          [
              _Ty=mz_zip_archive
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(180): note: see declaration of 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>'
          with
          [
              _Ty=mz_zip_archive
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(217): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::archive_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(218): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::archive_name_plus_slash_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(219): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::padding_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(220): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::file_stream_': class 'std::basic_ofstream<char,std::char_traits<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\iosfwd(626): note: see declaration of 'std::basic_ofstream<char,std::char_traits<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(221): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::writer_func_': class 'std::function<size_t (const void *,size_t)>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\output-archive.h(65): note: see declaration of 'std::function<size_t (const void *,size_t)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(225): warning C4251: 'torch::jit::Pickler::writer_': class 'std::function<void (const char *,size_t)>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(122): note: see declaration of 'std::function<void (const char *,size_t)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(232): warning C4251: 'torch::jit::Pickler::stack_': class 'std::vector<char,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize.h(76): note: see declaration of 'std::vector<char,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(244): warning C4251: 'torch::jit::Pickler::memoized_ivalue_map_': class 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(244): note: see declaration of 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(250): warning C4251: 'torch::jit::Pickler::memoized_ivalues_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(252): warning C4251: 'torch::jit::Pickler::type_renamer_': class 'std::function<c10::QualifiedName (const c10::ClassTypePtr &)>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(128): note: see declaration of 'std::function<c10::QualifiedName (const c10::ClassTypePtr &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(259): warning C4251: 'torch::jit::Pickler::tensor_data_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(260): warning C4251: 'torch::jit::Pickler::memoized_storage_map_': class 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(244): note: see declaration of 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): warning C4251: 'torch::jit::Pickler::memoized_globals_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): note: see declaration of 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(263): warning C4251: 'torch::jit::Pickler::memoized_strings_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): note: see declaration of 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(264): warning C4251: 'torch::jit::Pickler::memoized_devices_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): note: see declaration of 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(114): warning C4251: 'torch::jit::Unpickler::reader_': class 'std::function<size_t (char *,size_t)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(31): note: see declaration of 'std::function<size_t (char *,size_t)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(120): warning C4251: 'torch::jit::Unpickler::stack_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(124): warning C4251: 'torch::jit::Unpickler::globals_': class 'std::vector<std::function<void (void)>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Ty=std::function<void (void)>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): note: see declaration of 'std::vector<std::function<void (void)>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::function<void (void)>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(125): warning C4251: 'torch::jit::Unpickler::memo_table_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(126): warning C4251: 'torch::jit::Unpickler::marks_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(133): warning C4251: 'torch::jit::Unpickler::type_cache_': class 'std::unordered_map<std::string,c10::TypePtr,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Kty=std::string,
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1862): note: see declaration of 'std::unordered_map<std::string,c10::TypePtr,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(136): warning C4251: 'torch::jit::Unpickler::type_resolver_': class 'std::function<c10::StrongTypePtr (const c10::QualifiedName &)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(12): note: see declaration of 'std::function<c10::StrongTypePtr (const c10::QualifiedName &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(137): warning C4251: 'torch::jit::Unpickler::obj_loader_': class 'std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(14): note: see declaration of 'std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(140): warning C4251: 'torch::jit::Unpickler::read_record_': class 'std::function<c10::DataPtr (const std::string &)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(45): note: see declaration of 'std::function<c10::DataPtr (const std::string &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(141): warning C4251: 'torch::jit::Unpickler::device_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\cuda\cudastream.h(177): warning C4251: 'c10::cuda::CUDAStream::stream_': class 'c10::Stream' needs to have dll-interface to be used by clients of class 'c10::cuda::CUDAStream'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(57): note: see declaration of 'c10::Stream'
f:\2023\ai\tata\regression.cpp(89): warning C4838: conversion from 'double' to 'float' requires a narrowing conversion
f:\2023\ai\tata\regression.cpp(89): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\optional.h(347): warning C4244: 'argument': conversion from '_Ty' to 'T', possible loss of data
          with
          [
              _Ty=unsigned __int64
          ]
          and
          [
              T=int
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,double>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,double>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  Segmentation.cpp
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): note: see declaration of 'c10::Error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(30): warning C4251: 'c10::Error::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): warning C4251: 'c10::Error::context_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Error'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(40): warning C4251: 'c10::Error::backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(47): warning C4251: 'c10::Error::what_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(48): warning C4251: 'c10::Error::what_without_backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(54): warning C4251: 'c10::ThreadLocalDebugInfo::info_': class 'std::shared_ptr<c10::DebugInfoBase>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(35): note: see declaration of 'std::shared_ptr<c10::DebugInfoBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(56): warning C4251: 'c10::ThreadLocalDebugInfo::parent_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(82): warning C4251: 'c10::DebugInfoGuard::prev_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::DebugInfoGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(22): warning C4251: 'c10::DataPtr::ptr_': class 'c10::detail::UniqueVoidPtr' needs to have dll-interface to be used by clients of class 'c10::DataPtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\uniquevoidptr.h(38): note: see declaration of 'c10::detail::UniqueVoidPtr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): warning C4251: 'c10::InefficientStdFunctionContext::ptr_': class 'std::unique_ptr<void,std::function<void (void *)>>' needs to have dll-interface to be used by clients of struct 'c10::InefficientStdFunctionContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): note: see declaration of 'std::unique_ptr<void,std::function<void (void *)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(550): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(556): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(563): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(569): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(173): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(176): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(179): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(182): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(186): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(189): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(192): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(195): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(201): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(204): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(207): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(210): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(214): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(217): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(220): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(223): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(148): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(151): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(154): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(157): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(161): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(164): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(167): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(170): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(176): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(179): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(182): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(185): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(189): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(192): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(195): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(198): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeid.h(68): warning C4251: 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_': struct 'c10::util::type_index' needs to have dll-interface to be used by clients of class 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeindex.h(57): note: see declaration of 'c10::util::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(137): warning C4251: 'c10::Scalar::v': union 'c10::Scalar::v_t' needs to have dll-interface to be used by clients of class 'c10::Scalar'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(132): note: see declaration of 'c10::Scalar::v_t'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(66): warning C4251: 'c10::intrusive_ptr_target::refcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(67): warning C4251: 'c10::intrusive_ptr_target::weakcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(151): warning C4251: 'c10::Storage::storage_impl_': class 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::Storage'
          with
          [
              TTarget=c10::StorageImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(12): note: see declaration of 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::StorageImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(53): warning C4251: 'c10::impl::LocalDispatchKeySet::included_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(54): warning C4251: 'c10::impl::LocalDispatchKeySet::excluded_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(77): warning C4251: 'c10::impl::IncludeDispatchKeyGuard::include_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::IncludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(93): warning C4251: 'c10::impl::ExcludeDispatchKeyGuard::exclude_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::ExcludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\logging_is_not_google_glog.h(43): warning C4251: 'c10::MessageLogger::stream_': class 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::MessageLogger'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\iosfwd(623): note: see declaration of 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): warning C4251: 'c10::VariableVersion::version_counter_': class 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::VariableVersion'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): note: see declaration of 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1614): warning C4251: 'c10::TensorImpl::autograd_meta_': class 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(152): note: see declaration of 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1617): warning C4251: 'c10::TensorImpl::named_tensor_meta_': class 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(171): note: see declaration of 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): warning C4251: 'c10::TensorImpl::sizes_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1640): warning C4251: 'c10::TensorImpl::strides_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1665): warning C4251: 'c10::TensorImpl::device_opt_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1672): warning C4251: 'c10::TensorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1040): warning C4244: 'argument': conversion from 'float' to 'const _Ty', possible loss of data
          with
          [
              _Ty=uint64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1391): warning C4244: 'initializing': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(26): warning C4251: 'at::DeprecatedTypePropertiesRegistry::registry': class 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'at::DeprecatedTypePropertiesRegistry'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(24): note: see declaration of 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(77): warning C4251: 'c10::GeneratorImpl::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(91): warning C4251: 'c10::GeneratorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\generator.h(120): warning C4251: 'at::Generator::impl_': class 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'at::Generator'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(68): note: see declaration of 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(67): warning C4251: 'at::NamedTensorMeta::names_': class 'std::vector<at::Dimname,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::NamedTensorMeta'
          with
          [
              _Ty=at::Dimname
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(33): note: see declaration of 'std::vector<at::Dimname,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Dimname
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1318): warning C4251: 'at::Tensor::impl_': class 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>' needs to have dll-interface to be used by clients of class 'at::Tensor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(87): note: see declaration of 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1319): warning C4522: 'at::Tensor': multiple assignment operators specified
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(32): warning C4251: 'at::CPUGeneratorImpl::engine_': class 'at::mt19937_engine' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\mt19937rngengine.h(108): note: see declaration of 'at::mt19937_engine'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(33): warning C4251: 'at::CPUGeneratorImpl::next_float_normal_sample_': class 'c10::optional<float>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(23): note: see declaration of 'c10::optional<float>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(34): warning C4251: 'at::CPUGeneratorImpl::next_double_normal_sample_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::DeviceIndex', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::StreamId', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(209): warning C4251: 'at::Context::thc_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(210): warning C4251: 'at::Context::thh_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): warning C4251: 'at::Context::quantized_engine': class 'c10::optional<c10::QEngine>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): note: see declaration of 'c10::optional<c10::QEngine>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(224): warning C4251: 'at::Context::thc_state': class 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\cudahooksinterface.h(76): note: see declaration of 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(225): warning C4251: 'at::Context::thh_state': class 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\hiphooksinterface.h(33): note: see declaration of 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(56): warning C4251: 'at::TensorGeometry::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(57): warning C4251: 'at::TensorGeometry::strides_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(869): warning C4251: 'c10::StrongTypePtr::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(870): warning C4251: 'c10::StrongTypePtr::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dict_inl.h(41): warning C4244: 'argument': conversion from 'int64_t' to 'const _Kty', possible loss of data
          with
          [
              _Kty=int
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(80): warning C4251: 'std::enable_shared_from_this<c10::Type>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<c10::Type>'
          with
          [
              _Ty=c10::Type
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=c10::Type
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(286): warning C4251: 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(370): warning C4251: 'c10::Stride::stride_index_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(371): warning C4251: 'c10::Stride::contiguous_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(372): warning C4251: 'c10::Stride::stride_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(434): warning C4251: 'c10::ShapeSymbol::num_symbols': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of struct 'c10::ShapeSymbol'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(525): warning C4251: 'c10::SymbolicShape::dims_': class 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::SymbolicShape'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(499): note: see declaration of 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(833): warning C4251: 'c10::TensorType::scalar_type_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(834): warning C4251: 'c10::TensorType::device_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(836): warning C4251: 'c10::TensorType::strides_': struct 'c10::VaryingShape<c10::Stride>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(623): note: see declaration of 'c10::VaryingShape<c10::Stride>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(837): warning C4251: 'c10::TensorType::requires_grad_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(849): warning C4251: 'c10::TensorType::undefined_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(683): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(686): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(857): warning C4251: 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(973): warning C4251: 'c10::DictType::types': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::DictType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(981): warning C4251: 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1023): warning C4251: 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1073): warning C4251: 'c10::NamedType::name_': class 'c10::optional<c10::QualifiedName>' needs to have dll-interface to be used by clients of struct 'c10::NamedType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1057): note: see declaration of 'c10::optional<c10::QualifiedName>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1156): warning C4251: 'c10::TupleType::elements_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1158): warning C4251: 'c10::TupleType::schema_': class 'std::shared_ptr<c10::FunctionSchema>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1124): note: see declaration of 'std::shared_ptr<c10::FunctionSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1240): warning C4251: 'c10::EnumType::value_type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1241): warning C4251: 'c10::EnumType::enum_names_values_': class 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
          with
          [
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1242): warning C4251: 'c10::EnumType::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1930): warning C4251: 'c10::ClassAttribute::attributeType_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1931): warning C4251: 'c10::ClassAttribute::attributeName_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2255): warning C4251: 'c10::ClassType::constantNames_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2256): warning C4251: 'c10::ClassType::constantValues_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2258): warning C4251: 'c10::ClassType::compilation_unit_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2261): warning C4251: 'c10::ClassType::attributes_': class 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassAttribute
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2188): note: see declaration of 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassAttribute
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2264): warning C4251: 'c10::ClassType::attributeTypes_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2267): warning C4251: 'c10::ClassType::methods_': class 'std::vector<torch::jit::Function *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=torch::jit::Function *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1973): note: see declaration of 'std::vector<torch::jit::Function *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Function *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): warning C4251: 'c10::ClassType::properties_': class 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassType::Property
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): note: see declaration of 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassType::Property
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): warning C4251: 'c10::InterfaceType::methods_': class 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::InterfaceType'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): note: see declaration of 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(168): warning C4251: 'c10::ivalue::ConstantString::str_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::ConstantString'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(188): warning C4251: 'c10::ivalue::Tuple::elements_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(189): warning C4251: 'c10::ivalue::Tuple::type_': class 'std::shared_ptr<c10::TupleType>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1090): note: see declaration of 'std::shared_ptr<c10::TupleType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): note: see declaration of 'c10::ivalue::Future::FutureError'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(264): warning C4251: 'c10::ivalue::Future::FutureError::error_msg': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(461): warning C4251: 'c10::ivalue::Future::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(462): warning C4251: 'c10::ivalue::Future::completed_': struct 'std::atomic<bool>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(463): warning C4251: 'c10::ivalue::Future::finished_cv_': class 'std::condition_variable' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(682): note: see declaration of 'std::condition_variable'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(466): warning C4251: 'c10::ivalue::Future::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): warning C4251: 'c10::ivalue::Future::callbacks_': class 'std::vector<std::function<void (void)>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
          with
          [
              _Ty=std::function<void (void)>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): note: see declaration of 'std::vector<std::function<void (void)>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::function<void (void)>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(468): warning C4251: 'c10::ivalue::Future::eptr_': class 'std::exception_ptr' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\exception(239): note: see declaration of 'std::exception_ptr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(389): warning C4101: 'e': unreferenced local variable
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(565): warning C4251: 'c10::ivalue::Object::slots_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Object'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(648): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(650): warning C4244: 'return': conversion from 'int64_t' to 'unsigned char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(651): warning C4244: 'return': conversion from 'int64_t' to 'signed char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(652): warning C4244: 'return': conversion from 'int64_t' to 'unsigned short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(653): warning C4244: 'return': conversion from 'int64_t' to 'short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(654): warning C4244: 'return': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(655): warning C4244: 'return': conversion from 'int64_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(657): warning C4244: 'return': conversion from 'int64_t' to 'c10::detail::_guarded_unsigned_long', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(40): warning C4251: 'at::namedinference::TensorName::origin_': class 'c10::ArrayRef<at::Dimname>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorName'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dimname.h(36): note: see declaration of 'c10::ArrayRef<at::Dimname>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(70): warning C4251: 'at::namedinference::TensorNames::names_': class 'c10::SmallVector<at::namedinference::TensorName,10>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorNames'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(49): note: see declaration of 'c10::SmallVector<at::namedinference::TensorName,10>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(190): warning C4251: 'torch::autograd::AutogradMeta::name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(193): warning C4251: 'torch::autograd::AutogradMeta::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(194): warning C4251: 'torch::autograd::AutogradMeta::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(196): warning C4251: 'torch::autograd::AutogradMeta::hooks_': class 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(174): note: see declaration of 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(197): warning C4251: 'torch::autograd::AutogradMeta::cpp_hooks_list': class 'std::shared_ptr<torch::autograd::hooks_list>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\cpp_hook.h(11): note: see declaration of 'std::shared_ptr<torch::autograd::hooks_list>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(216): warning C4251: 'torch::autograd::AutogradMeta::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): warning C4251: 'torch::autograd::DifferentiableViewMeta::view_fn_': class 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::DifferentiableViewMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): note: see declaration of 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): note: see declaration of 'torch::jit::GraphAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(121): warning C4251: 'torch::jit::GraphAttr::value_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphsAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): note: see declaration of 'torch::jit::GraphsAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(138): warning C4251: 'torch::jit::GraphsAttr::value_': class 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphsAttr'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(125): note: see declaration of 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(176): warning C4251: 'torch::jit::SourceRange::source_': class 'std::shared_ptr<torch::jit::Source>' needs to have dll-interface to be used by clients of struct 'torch::jit::SourceRange'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(110): note: see declaration of 'std::shared_ptr<torch::jit::Source>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(25): warning C4251: 'torch::jit::Scope::parent_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Scope'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): warning C4251: 'torch::jit::InlinedCallStack::callee_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::InlinedCallStack'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): warning C4275: non dll-interface class 'std::runtime_error' used as base for dll-interface struct 'torch::jit::constant_not_supported_error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\stdexcept(157): note: see declaration of 'std::runtime_error'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): note: see declaration of 'torch::jit::constant_not_supported_error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): warning C4251: 'c10::KernelFunction::functor_': class 'std::shared_ptr<c10::OperatorKernel>' needs to have dll-interface to be used by clients of class 'c10::KernelFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): note: see declaration of 'std::shared_ptr<c10::OperatorKernel>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(191): warning C4251: 'c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_': struct 'c10::utils::bitset' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bitset.h(23): note: see declaration of 'c10::utils::bitset'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(194): warning C4251: 'c10::DispatchKeyExtractor::nonFallthroughKeys_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\cppsignature.h(52): warning C4251: 'c10::impl::CppSignature::signature_': class 'std::type_index' needs to have dll-interface to be used by clients of class 'c10::impl::CppSignature'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\typeindex(16): note: see declaration of 'std::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(185): warning C4251: 'c10::impl::OperatorEntry::name_': struct 'c10::OperatorName' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\operator_name.h(14): note: see declaration of 'c10::OperatorName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): warning C4251: 'c10::impl::OperatorEntry::schema_': class 'c10::optional<c10::impl::AnnotatedSchema>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): note: see declaration of 'c10::optional<c10::impl::AnnotatedSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): warning C4251: 'c10::impl::OperatorEntry::manuallyBoxedKernel_': class 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): note: see declaration of 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): warning C4251: 'c10::impl::OperatorEntry::kernels_': class 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): note: see declaration of 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(230): warning C4251: 'c10::impl::OperatorEntry::catchAllKernel_': class 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(117): note: see declaration of 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(231): warning C4251: 'c10::impl::OperatorEntry::missingKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(232): warning C4251: 'c10::impl::OperatorEntry::ambiguousAutogradOtherKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(239): warning C4251: 'c10::impl::OperatorEntry::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): warning C4251: 'at::StringView::owned_str_ptr_': class 'std::shared_ptr<std::string>' needs to have dll-interface to be used by clients of struct 'at::StringView'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): note: see declaration of 'std::shared_ptr<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(196): warning C4251: 'at::RecordFunction::sorted_active_tls_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(197): warning C4251: 'at::RecordFunction::sorted_active_global_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(201): warning C4251: 'at::RecordFunction::tls_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(205): warning C4251: 'at::RecordFunction::global_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(214): warning C4251: 'at::RecordFunction::inputs_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(339): warning C4251: 'at::RecordFunctionCallback::start_': class 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(256): note: see declaration of 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(340): warning C4251: 'at::RecordFunctionCallback::end_': class 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(257): note: see declaration of 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(341): warning C4251: 'at::RecordFunctionCallback::should_run_': class 'std::function<bool (const at::RecordFunctionCallback &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(306): note: see declaration of 'std::function<bool (const at::RecordFunctionCallback &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(494): warning C4251: 'at::RecordFunctionTLS::sorted_tls_callbacks_': class 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunctionTLS'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(400): note: see declaration of 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): warning C4251: 'c10::Dispatcher::operators_': class 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): note: see declaration of 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): warning C4251: 'c10::Dispatcher::operatorLookupTable_': class 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): note: see declaration of 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): warning C4251: 'c10::Dispatcher::libraries_': class 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): note: see declaration of 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): warning C4251: 'c10::Dispatcher::listeners_': class 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): note: see declaration of 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(240): warning C4251: 'c10::Dispatcher::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(305): warning C4251: 'c10::OperatorHandle::operatorIterator_': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' needs to have dll-interface to be used by clients of class 'c10::OperatorHandle'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\list(457): note: see declaration of 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): warning C4251: 'c10::RegisterOperators::Options::schemaOrName_': class 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): note: see declaration of 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): warning C4251: 'c10::RegisterOperators::Options::kernels': class 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): note: see declaration of 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(430): warning C4251: 'c10::RegisterOperators::Options::aliasAnalysisKind_': class 'c10::optional<c10::AliasAnalysisKind>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(190): note: see declaration of 'c10::optional<c10::AliasAnalysisKind>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): warning C4251: 'c10::RegisterOperators::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(179): warning C4251: 'torch::CppFunction::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(181): warning C4251: 'torch::CppFunction::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(182): warning C4251: 'torch::CppFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(183): warning C4251: 'torch::CppFunction::debug_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(585): warning C4251: 'torch::Library::ns_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(586): warning C4251: 'torch::Library::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(590): warning C4251: 'torch::Library::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::Library'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): warning C4251: 'torch::jit::Operator::op_': class 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>' needs to have dll-interface to be used by clients of struct 'torch::jit::Operator'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): note: see declaration of 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(260): warning C4251: 'torch::jit::Node::inputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(261): warning C4251: 'torch::jit::Node::outputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): warning C4251: 'torch::jit::Node::blocks_': class 'std::vector<torch::jit::Block *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Block *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): note: see declaration of 'std::vector<torch::jit::Block *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Block *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(266): warning C4251: 'torch::jit::Node::source_range_': class 'c10::optional<torch::jit::SourceRange>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(85): note: see declaration of 'c10::optional<torch::jit::SourceRange>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(267): warning C4251: 'torch::jit::Node::scope_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(268): warning C4251: 'torch::jit::Node::callstack_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): warning C4251: 'torch::jit::Node::values_': class 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): note: see declaration of 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(1365): warning C4251: 'torch::jit::ProfileOptionalOp::callback_': class 'std::function<void (torch::jit::Stack &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::ProfileOptionalOp'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\builtin_function.h(13): note: see declaration of 'std::function<void (torch::jit::Stack &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): warning C4251: 'torch::jit::ArgumentSpecCreator::instructions_': class 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::ArgumentSpecCreator'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): note: see declaration of 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'const int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(241): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(260): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(432): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\threadlocalstate.h(31): warning C4251: 'at::ThreadLocalState::debug_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'at::ThreadLocalState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): warning C4251: 'torch::jit::Code::pImpl': class 'std::shared_ptr<torch::jit::CodeImpl>' needs to have dll-interface to be used by clients of struct 'torch::jit::Code'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): note: see declaration of 'std::shared_ptr<torch::jit::CodeImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): warning C4251: 'torch::jit::GraphExecutor::pImpl': class 'std::shared_ptr<torch::jit::GraphExecutorImplBase>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphExecutor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): note: see declaration of 'std::shared_ptr<torch::jit::GraphExecutorImplBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(115): warning C4251: 'torch::jit::GraphFunction::name_': struct 'c10::QualifiedName' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\qualified_name.h(11): note: see declaration of 'c10::QualifiedName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(117): warning C4251: 'torch::jit::GraphFunction::graph_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): warning C4251: 'torch::jit::GraphFunction::optimized_graph_': class 'c10::optional<std::shared_ptr<torch::jit::Graph>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): note: see declaration of 'c10::optional<std::shared_ptr<torch::jit::Graph>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(129): warning C4251: 'torch::jit::GraphFunction::compile_mutex': class 'std::recursive_mutex' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(95): note: see declaration of 'std::recursive_mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(136): warning C4251: 'torch::jit::GraphFunction::function_creator_': class 'std::function<void (torch::jit::GraphFunction &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(15): note: see declaration of 'std::function<void (torch::jit::GraphFunction &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(141): warning C4251: 'torch::jit::GraphFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\method.h(57): warning C4251: 'torch::jit::Method::owner_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Method'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\object.h(136): warning C4251: 'torch::jit::Object::_ivalue_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Object'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(43): warning C4251: 'std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::jit::tracer::TracingState>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(47): warning C4251: 'torch::jit::tracer::TracingState::graph': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(52): warning C4251: 'torch::jit::tracer::TracingState::lookup_var_name_fn': class 'std::function<std::string (const torch::autograd::Variable &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(51): note: see declaration of 'std::function<std::string (const torch::autograd::Variable &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): warning C4251: 'torch::jit::tracer::TracingState::env_stack': class 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): note: see declaration of 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(181): warning C4251: 'torch::jit::tracer::NoWarn::state': class 'std::shared_ptr<_Ty>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::NoWarn'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2019): note: see declaration of 'std::shared_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(96): warning C4251: 'torch::data::samplers::DistributedRandomSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedRandomSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(129): warning C4251: 'torch::data::samplers::DistributedSequentialSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedSequentialSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): warning C4251: 'torch::jit::CompilationUnit::functions_': class 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=torch::jit::Function
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): note: see declaration of 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::jit::Function
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): warning C4251: 'torch::jit::CompilationUnit::dict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(291): warning C4251: 'torch::jit::CompilationUnit::classDict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): warning C4251: 'torch::jit::CompilationUnit::classes_': class 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): note: see declaration of 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\input-archive.h(110): warning C4251: 'torch::serialize::InputArchive::hierarchy_prefix_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::serialize::InputArchive'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\output-archive.h(76): warning C4251: 'torch::serialize::OutputArchive::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of class 'torch::serialize::OutputArchive'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(64): warning C4251: 'std::enable_shared_from_this<torch::nn::Module>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::nn::Module>'
          with
          [
              _Ty=torch::nn::Module
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::nn::Module
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(543): warning C4251: 'torch::nn::Module::parameters_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(591): warning C4251: 'torch::nn::Module::buffers_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(594): warning C4251: 'torch::nn::Module::children_': class 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(248): note: see declaration of 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(597): warning C4251: 'torch::nn::Module::name_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(24): warning C4251: 'torch::nn::BatchNormOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::BatchNormOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(81): warning C4251: 'torch::nn::functional::BatchNormFuncOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::BatchNormFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(25): warning C4251: 'torch::nn::EmbeddingOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(27): warning C4251: 'torch::nn::EmbeddingOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(46): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(48): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(70): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(72): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(101): warning C4251: 'torch::nn::EmbeddingBagOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(109): warning C4251: 'torch::nn::EmbeddingBagOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(128): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(136): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(162): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(170): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(25): warning C4251: 'torch::nn::FoldOptions::output_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(28): warning C4251: 'torch::nn::FoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(32): warning C4251: 'torch::nn::FoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(36): warning C4251: 'torch::nn::FoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(39): warning C4251: 'torch::nn::FoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(69): warning C4251: 'torch::nn::UnfoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(73): warning C4251: 'torch::nn::UnfoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(77): warning C4251: 'torch::nn::UnfoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(80): warning C4251: 'torch::nn::UnfoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(223): warning C4251: 'torch::nn::functional::SoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(263): warning C4251: 'torch::nn::functional::SoftminFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftminFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(303): warning C4251: 'torch::nn::functional::LogSoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LogSoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(65): warning C4251: 'torch::nn::UnflattenOptions::dimname_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(67): warning C4251: 'torch::nn::UnflattenOptions::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(69): warning C4251: 'torch::nn::UnflattenOptions::namedshape_': class 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(56): note: see declaration of 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(643): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(665): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(675): warning C4244: '=': conversion from 'T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(23): warning C4251: 'torch::nn::L1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::L1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(55): warning C4251: 'torch::nn::KLDivLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>' needs to have dll-interface to be used by clients of struct 'torch::nn::KLDivLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(49): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(90): warning C4251: 'torch::nn::MSELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MSELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(122): warning C4251: 'torch::nn::BCELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(154): warning C4251: 'torch::nn::HingeEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::HingeEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(195): warning C4251: 'torch::nn::MultiMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(228): warning C4251: 'torch::nn::CosineEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CosineEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(262): warning C4251: 'torch::nn::MultiLabelMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(296): warning C4251: 'torch::nn::SoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(333): warning C4251: 'torch::nn::MultiLabelSoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelSoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(372): warning C4251: 'torch::nn::TripletMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::TripletMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(403): warning C4251: 'torch::nn::CTCLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CTCLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(441): warning C4251: 'torch::nn::SmoothL1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SmoothL1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(479): warning C4251: 'torch::nn::PoissonNLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::PoissonNLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(510): warning C4251: 'torch::nn::MarginRankingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MarginRankingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(546): warning C4251: 'torch::nn::NLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::NLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(581): warning C4251: 'torch::nn::CrossEntropyLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CrossEntropyLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(612): warning C4251: 'torch::nn::BCEWithLogitsLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCEWithLogitsLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(20): warning C4251: 'torch::nn::LayerNormOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::LayerNormOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(43): warning C4251: 'torch::nn::functional::LayerNormFuncOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LayerNormFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(133): warning C4251: 'torch::nn::functional::NormalizeFuncOptions::out_': class 'c10::optional<at::Tensor>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::NormalizeFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(561): note: see declaration of 'c10::optional<at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(23): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<D>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see reference to class template instantiation 'c10::ArrayRef<int64_t>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(57): note: see reference to class template instantiation 'std::initializer_list<c10::DispatchKey>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(55): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(95): warning C4251: 'torch::nn::ZeroPad2dOptions::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ZeroPad2dOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(115): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(162): warning C4251: 'torch::nn::functional::PadFuncOptions::pad_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(165): warning C4251: 'torch::nn::functional::PadFuncOptions::mode_': class 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(153): note: see declaration of 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\padding.h(14): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(963): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(964): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(23): warning C4251: 'torch::nn::UpsampleOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): warning C4251: 'torch::nn::UpsampleOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(36): warning C4251: 'torch::nn::UpsampleOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(30): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(42): warning C4251: 'torch::nn::UpsampleOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(64): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(67): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(71): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(55): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(82): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(93): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(24): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::mode_': class 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(20): note: see declaration of 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(26): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::padding_mode_': class 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(21): note: see declaration of 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(28): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(94): warning C4251: 'torch::nn::FunctionalImpl::function_': class 'std::function<at::Tensor (at::Tensor)>' needs to have dll-interface to be used by clients of class 'torch::nn::FunctionalImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): note: see declaration of 'std::function<at::Tensor (at::Tensor)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\adaptive.h(26): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::AdaptiveLogSoftmaxWithLossOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(71): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(81): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::head': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(83): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(44): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(69): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(115): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(140): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(165): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(248): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(273): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(298): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options': struct 'torch::nn::AvgPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(42): note: see declaration of 'torch::nn::AvgPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(44): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options': struct 'torch::nn::AvgPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(50): note: see declaration of 'torch::nn::AvgPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(70): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options': struct 'torch::nn::AvgPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(58): note: see declaration of 'torch::nn::AvgPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(96): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options': struct 'torch::nn::MaxPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(132): note: see declaration of 'torch::nn::MaxPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(141): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options': struct 'torch::nn::MaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(140): note: see declaration of 'torch::nn::MaxPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(171): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options': struct 'torch::nn::MaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(148): note: see declaration of 'torch::nn::MaxPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(201): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(227): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(239): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(201): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(255): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(209): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(287): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(217): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(319): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(346): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(358): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(270): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(278): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(402): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(286): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(430): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(354): note: see declaration of 'torch::nn::MaxUnpoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(476): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(362): note: see declaration of 'torch::nn::MaxUnpoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(505): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(370): note: see declaration of 'torch::nn::MaxUnpoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(534): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(581): warning C4251: 'torch::nn::FractionalMaxPool2dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool2dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(452): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(624): warning C4251: 'torch::nn::FractionalMaxPool3dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool3dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(460): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options': struct 'torch::nn::LPPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(510): note: see declaration of 'torch::nn::LPPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(667): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options': struct 'torch::nn::LPPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(518): note: see declaration of 'torch::nn::LPPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(695): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(23): warning C4251: 'torch::nn::detail::RNNOptionsBase::mode_': class 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::detail::RNNOptionsBase'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(15): note: see declaration of 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(66): warning C4251: 'torch::nn::RNNOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(179): warning C4251: 'torch::nn::RNNCellOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNCellOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(99): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(143): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(193): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(821): warning C4251: 'torch::nn::MultiheadAttentionImpl::out_proj': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::MultiheadAttentionImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(338): warning C4251: 'torch::autograd::profiler::Event::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\wrapdimutils.h(25): note: see declaration of 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(342): warning C4251: 'torch::autograd::profiler::Event::cuda_event': class 'std::shared_ptr<CUevent_st>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(24): note: see declaration of 'std::shared_ptr<CUevent_st>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(348): warning C4251: 'torch::autograd::profiler::Event::stack_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(189): warning C4244: 'initializing': conversion from 'double' to 'int64_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): warning C4251: 'torch::autograd::profiler::RecordProfile::file_': class 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::RecordProfile'
          with
          [
              _Ty=std::ofstream
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): note: see declaration of 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>'
          with
          [
              _Ty=std::ofstream
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(456): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::cb_': class 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(436): note: see declaration of 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(457): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::profilerDisableOptions_': class 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(395): note: see declaration of 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(47): warning C4251: 'torch::autograd::SavedVariable::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(50): warning C4251: 'torch::autograd::SavedVariable::weak_grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(51): warning C4251: 'torch::autograd::SavedVariable::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(98): warning C4251: 'std::enable_shared_from_this<torch::autograd::Node>::_Wptr': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::autograd::Node>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(426): warning C4251: 'torch::autograd::Node::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(428): warning C4251: 'torch::autograd::Node::next_edges_': class 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::Edge
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(33): note: see declaration of 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::Edge
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): warning C4251: 'torch::autograd::Node::anomaly_metadata_': class 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): note: see declaration of 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(431): warning C4251: 'torch::autograd::Node::pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(336): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(432): warning C4251: 'torch::autograd::Node::post_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(312): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): warning C4251: 'torch::autograd::Node::input_metadata_': class 'c10::SmallVector<torch::autograd::InputMetadata,2>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): note: see declaration of 'c10::SmallVector<torch::autograd::InputMetadata,2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(173): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(179): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(186): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(192): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(247): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): warning C4251: 'torch::autograd::AutogradContext::saved_data': class 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): note: see declaration of 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(122): warning C4251: 'torch::autograd::AutogradContext::non_differentiable_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(123): warning C4251: 'torch::autograd::AutogradContext::dirty_inputs_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(124): warning C4251: 'torch::autograd::AutogradContext::saved_variables_': class 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(34): note: see declaration of 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(125): warning C4251: 'torch::autograd::AutogradContext::to_save_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(131): warning C4251: 'torch::autograd::AutogradContext::grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(147): warning C4251: 'torch::autograd::VariableInfo::size': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::VariableInfo'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(36): warning C4251: 'torch::nn::TransformerEncoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(67): warning C4251: 'torch::nn::TransformerDecoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(59): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(62): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(65): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(68): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(71): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(73): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(76): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(78): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(136): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(139): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(142): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(145): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::multihead_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(148): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(151): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(154): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(157): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(160): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(163): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout3': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(166): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm3': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(28): warning C4251: 'torch::nn::TransformerEncoderOptions::encoder_layer_': class 'torch::nn::TransformerEncoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(87): note: see declaration of 'torch::nn::TransformerEncoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(34): warning C4251: 'torch::nn::TransformerEncoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(57): warning C4251: 'torch::nn::TransformerDecoderOptions::decoder_layer_': class 'torch::nn::TransformerDecoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(185): note: see declaration of 'torch::nn::TransformerDecoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(63): warning C4251: 'torch::nn::TransformerDecoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(56): warning C4251: 'torch::nn::TransformerEncoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(59): warning C4251: 'torch::nn::TransformerEncoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(118): warning C4251: 'torch::nn::TransformerDecoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(121): warning C4251: 'torch::nn::TransformerDecoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(50): warning C4251: 'torch::nn::TransformerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(53): warning C4251: 'torch::nn::TransformerOptions::custom_encoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(56): warning C4251: 'torch::nn::TransformerOptions::custom_decoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(125): warning C4251: 'torch::nn::TransformerImpl::encoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(128): warning C4251: 'torch::nn::TransformerImpl::decoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(80): warning C4251: 'torch::optim::OptimizerParamGroup::params_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(81): warning C4251: 'torch::optim::OptimizerParamGroup::options_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(147): warning C4251: 'torch::optim::Optimizer::param_groups_': class 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(91): note: see declaration of 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(148): warning C4251: 'torch::optim::Optimizer::state_': class 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(135): note: see declaration of 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(149): warning C4251: 'torch::optim::Optimizer::defaults_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adam.h(25): warning C4251: 'torch::optim::AdamOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adamw.h(25): warning C4251: 'torch::optim::AdamWOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamWOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(21): warning C4251: 'torch::optim::LBFGSOptions::max_eval_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(25): warning C4251: 'torch::optim::LBFGSOptions::line_search_fn_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): warning C4251: 'torch::optim::LBFGSParamState::old_dirs_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(42): warning C4251: 'torch::optim::LBFGSParamState::old_stps_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(43): warning C4251: 'torch::optim::LBFGSParamState::ro_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): warning C4251: 'torch::optim::LBFGSParamState::al_': class 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): note: see declaration of 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(74): warning C4251: 'torch::optim::LBFGS::_numel_cache': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of class 'torch::optim::LBFGS'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(180): warning C4251: 'caffe2::serialize::PyTorchStreamReader::ar_': class 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
          with
          [
              _Ty=mz_zip_archive
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(180): note: see declaration of 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>'
          with
          [
              _Ty=mz_zip_archive
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(181): warning C4251: 'caffe2::serialize::PyTorchStreamReader::archive_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(182): warning C4251: 'caffe2::serialize::PyTorchStreamReader::archive_name_plus_slash_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(183): warning C4251: 'caffe2::serialize::PyTorchStreamReader::in_': class 'std::unique_ptr<caffe2::serialize::ReadAdapterInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamReader'
          with
          [
              _Ty=caffe2::serialize::ReadAdapterInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(159): note: see declaration of 'std::unique_ptr<caffe2::serialize::ReadAdapterInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=caffe2::serialize::ReadAdapterInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(216): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::ar_': class 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
          with
          [
              _Ty=mz_zip_archive
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(180): note: see declaration of 'std::unique_ptr<mz_zip_archive,std::default_delete<_Ty>>'
          with
          [
              _Ty=mz_zip_archive
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(217): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::archive_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(218): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::archive_name_plus_slash_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(219): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::padding_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(220): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::file_stream_': class 'std::basic_ofstream<char,std::char_traits<char>>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\iosfwd(626): note: see declaration of 'std::basic_ofstream<char,std::char_traits<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\caffe2\serialize\inline_container.h(221): warning C4251: 'caffe2::serialize::PyTorchStreamWriter::writer_func_': class 'std::function<size_t (const void *,size_t)>' needs to have dll-interface to be used by clients of class 'caffe2::serialize::PyTorchStreamWriter'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\output-archive.h(65): note: see declaration of 'std::function<size_t (const void *,size_t)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(225): warning C4251: 'torch::jit::Pickler::writer_': class 'std::function<void (const char *,size_t)>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(122): note: see declaration of 'std::function<void (const char *,size_t)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(232): warning C4251: 'torch::jit::Pickler::stack_': class 'std::vector<char,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize.h(76): note: see declaration of 'std::vector<char,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(244): warning C4251: 'torch::jit::Pickler::memoized_ivalue_map_': class 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(244): note: see declaration of 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(250): warning C4251: 'torch::jit::Pickler::memoized_ivalues_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(252): warning C4251: 'torch::jit::Pickler::type_renamer_': class 'std::function<c10::QualifiedName (const c10::ClassTypePtr &)>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(128): note: see declaration of 'std::function<c10::QualifiedName (const c10::ClassTypePtr &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(259): warning C4251: 'torch::jit::Pickler::tensor_data_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(260): warning C4251: 'torch::jit::Pickler::memoized_storage_map_': class 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(244): note: see declaration of 'std::unordered_map<const void *,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=const void *,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): warning C4251: 'torch::jit::Pickler::memoized_globals_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): note: see declaration of 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(263): warning C4251: 'torch::jit::Pickler::memoized_strings_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): note: see declaration of 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(264): warning C4251: 'torch::jit::Pickler::memoized_devices_map_': class 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Pickler'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\pickler.h(262): note: see declaration of 'std::unordered_map<std::string,uint32_t,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=uint32_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(114): warning C4251: 'torch::jit::Unpickler::reader_': class 'std::function<size_t (char *,size_t)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(31): note: see declaration of 'std::function<size_t (char *,size_t)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(120): warning C4251: 'torch::jit::Unpickler::stack_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(124): warning C4251: 'torch::jit::Unpickler::globals_': class 'std::vector<std::function<void (void)>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Ty=std::function<void (void)>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): note: see declaration of 'std::vector<std::function<void (void)>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::function<void (void)>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(125): warning C4251: 'torch::jit::Unpickler::memo_table_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(126): warning C4251: 'torch::jit::Unpickler::marks_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(133): warning C4251: 'torch::jit::Unpickler::type_cache_': class 'std::unordered_map<std::string,c10::TypePtr,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              _Kty=std::string,
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1862): note: see declaration of 'std::unordered_map<std::string,c10::TypePtr,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=std::string,
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(136): warning C4251: 'torch::jit::Unpickler::type_resolver_': class 'std::function<c10::StrongTypePtr (const c10::QualifiedName &)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(12): note: see declaration of 'std::function<c10::StrongTypePtr (const c10::QualifiedName &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(137): warning C4251: 'torch::jit::Unpickler::obj_loader_': class 'std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(14): note: see declaration of 'std::function<c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>> (c10::StrongTypePtr,c10::IValue)>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(140): warning C4251: 'torch::jit::Unpickler::read_record_': class 'std::function<c10::DataPtr (const std::string &)>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(45): note: see declaration of 'std::function<c10::DataPtr (const std::string &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\serialization\unpickler.h(141): warning C4251: 'torch::jit::Unpickler::device_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of class 'torch::jit::Unpickler'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\cuda\cudastream.h(177): warning C4251: 'c10::cuda::CUDAStream::stream_': class 'c10::Stream' needs to have dll-interface to be used by clients of class 'c10::cuda::CUDAStream'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(57): note: see declaration of 'c10::Stream'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\optional.h(347): warning C4244: 'argument': conversion from '_Ty' to 'T', possible loss of data
          with
          [
              _Ty=unsigned __int64
          ]
          and
          [
              T=int
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,double>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,double>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  TataBase.cpp
  Postprocessing.cpp
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): note: see declaration of 'c10::Error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(30): warning C4251: 'c10::Error::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): warning C4251: 'c10::Error::context_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Error'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(40): warning C4251: 'c10::Error::backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(47): warning C4251: 'c10::Error::what_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(48): warning C4251: 'c10::Error::what_without_backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(54): warning C4251: 'c10::ThreadLocalDebugInfo::info_': class 'std::shared_ptr<c10::DebugInfoBase>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(35): note: see declaration of 'std::shared_ptr<c10::DebugInfoBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(56): warning C4251: 'c10::ThreadLocalDebugInfo::parent_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(82): warning C4251: 'c10::DebugInfoGuard::prev_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::DebugInfoGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(22): warning C4251: 'c10::DataPtr::ptr_': class 'c10::detail::UniqueVoidPtr' needs to have dll-interface to be used by clients of class 'c10::DataPtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\uniquevoidptr.h(38): note: see declaration of 'c10::detail::UniqueVoidPtr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): warning C4251: 'c10::InefficientStdFunctionContext::ptr_': class 'std::unique_ptr<void,std::function<void (void *)>>' needs to have dll-interface to be used by clients of struct 'c10::InefficientStdFunctionContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): note: see declaration of 'std::unique_ptr<void,std::function<void (void *)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(550): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(556): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(563): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(569): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(173): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(176): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(179): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(182): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(186): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(189): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(192): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(195): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(201): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(204): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(207): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(210): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(214): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(217): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(220): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(223): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(148): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(151): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(154): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(157): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(161): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(164): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(167): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(170): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(176): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(179): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(182): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(185): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(189): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(192): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(195): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(198): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeid.h(68): warning C4251: 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_': struct 'c10::util::type_index' needs to have dll-interface to be used by clients of class 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeindex.h(57): note: see declaration of 'c10::util::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(137): warning C4251: 'c10::Scalar::v': union 'c10::Scalar::v_t' needs to have dll-interface to be used by clients of class 'c10::Scalar'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(132): note: see declaration of 'c10::Scalar::v_t'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(66): warning C4251: 'c10::intrusive_ptr_target::refcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(67): warning C4251: 'c10::intrusive_ptr_target::weakcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(151): warning C4251: 'c10::Storage::storage_impl_': class 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::Storage'
          with
          [
              TTarget=c10::StorageImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(12): note: see declaration of 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::StorageImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(53): warning C4251: 'c10::impl::LocalDispatchKeySet::included_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(54): warning C4251: 'c10::impl::LocalDispatchKeySet::excluded_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(77): warning C4251: 'c10::impl::IncludeDispatchKeyGuard::include_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::IncludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(93): warning C4251: 'c10::impl::ExcludeDispatchKeyGuard::exclude_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::ExcludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\logging_is_not_google_glog.h(43): warning C4251: 'c10::MessageLogger::stream_': class 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::MessageLogger'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\iosfwd(623): note: see declaration of 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): warning C4251: 'c10::VariableVersion::version_counter_': class 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::VariableVersion'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): note: see declaration of 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1614): warning C4251: 'c10::TensorImpl::autograd_meta_': class 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(152): note: see declaration of 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1617): warning C4251: 'c10::TensorImpl::named_tensor_meta_': class 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(171): note: see declaration of 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): warning C4251: 'c10::TensorImpl::sizes_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1640): warning C4251: 'c10::TensorImpl::strides_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1665): warning C4251: 'c10::TensorImpl::device_opt_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1672): warning C4251: 'c10::TensorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1040): warning C4244: 'argument': conversion from 'float' to 'const _Ty', possible loss of data
          with
          [
              _Ty=uint64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1391): warning C4244: 'initializing': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(26): warning C4251: 'at::DeprecatedTypePropertiesRegistry::registry': class 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'at::DeprecatedTypePropertiesRegistry'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(24): note: see declaration of 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(77): warning C4251: 'c10::GeneratorImpl::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(91): warning C4251: 'c10::GeneratorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\generator.h(120): warning C4251: 'at::Generator::impl_': class 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'at::Generator'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(68): note: see declaration of 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(67): warning C4251: 'at::NamedTensorMeta::names_': class 'std::vector<at::Dimname,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::NamedTensorMeta'
          with
          [
              _Ty=at::Dimname
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(33): note: see declaration of 'std::vector<at::Dimname,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Dimname
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1318): warning C4251: 'at::Tensor::impl_': class 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>' needs to have dll-interface to be used by clients of class 'at::Tensor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(87): note: see declaration of 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1319): warning C4522: 'at::Tensor': multiple assignment operators specified
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(32): warning C4251: 'at::CPUGeneratorImpl::engine_': class 'at::mt19937_engine' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\mt19937rngengine.h(108): note: see declaration of 'at::mt19937_engine'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(33): warning C4251: 'at::CPUGeneratorImpl::next_float_normal_sample_': class 'c10::optional<float>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(23): note: see declaration of 'c10::optional<float>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(34): warning C4251: 'at::CPUGeneratorImpl::next_double_normal_sample_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::DeviceIndex', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::StreamId', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(209): warning C4251: 'at::Context::thc_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(210): warning C4251: 'at::Context::thh_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): warning C4251: 'at::Context::quantized_engine': class 'c10::optional<c10::QEngine>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): note: see declaration of 'c10::optional<c10::QEngine>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(224): warning C4251: 'at::Context::thc_state': class 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\cudahooksinterface.h(76): note: see declaration of 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(225): warning C4251: 'at::Context::thh_state': class 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\hiphooksinterface.h(33): note: see declaration of 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(56): warning C4251: 'at::TensorGeometry::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(57): warning C4251: 'at::TensorGeometry::strides_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(869): warning C4251: 'c10::StrongTypePtr::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(870): warning C4251: 'c10::StrongTypePtr::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dict_inl.h(41): warning C4244: 'argument': conversion from 'int64_t' to 'const _Kty', possible loss of data
          with
          [
              _Kty=int
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(80): warning C4251: 'std::enable_shared_from_this<c10::Type>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<c10::Type>'
          with
          [
              _Ty=c10::Type
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=c10::Type
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(286): warning C4251: 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(370): warning C4251: 'c10::Stride::stride_index_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(371): warning C4251: 'c10::Stride::contiguous_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(372): warning C4251: 'c10::Stride::stride_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(434): warning C4251: 'c10::ShapeSymbol::num_symbols': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of struct 'c10::ShapeSymbol'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(525): warning C4251: 'c10::SymbolicShape::dims_': class 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::SymbolicShape'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(499): note: see declaration of 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(833): warning C4251: 'c10::TensorType::scalar_type_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(834): warning C4251: 'c10::TensorType::device_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(836): warning C4251: 'c10::TensorType::strides_': struct 'c10::VaryingShape<c10::Stride>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(623): note: see declaration of 'c10::VaryingShape<c10::Stride>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(837): warning C4251: 'c10::TensorType::requires_grad_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(849): warning C4251: 'c10::TensorType::undefined_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(683): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(686): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(857): warning C4251: 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(973): warning C4251: 'c10::DictType::types': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::DictType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(981): warning C4251: 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1023): warning C4251: 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1073): warning C4251: 'c10::NamedType::name_': class 'c10::optional<c10::QualifiedName>' needs to have dll-interface to be used by clients of struct 'c10::NamedType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1057): note: see declaration of 'c10::optional<c10::QualifiedName>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1156): warning C4251: 'c10::TupleType::elements_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1158): warning C4251: 'c10::TupleType::schema_': class 'std::shared_ptr<c10::FunctionSchema>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1124): note: see declaration of 'std::shared_ptr<c10::FunctionSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1240): warning C4251: 'c10::EnumType::value_type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1241): warning C4251: 'c10::EnumType::enum_names_values_': class 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
          with
          [
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1242): warning C4251: 'c10::EnumType::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1930): warning C4251: 'c10::ClassAttribute::attributeType_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1931): warning C4251: 'c10::ClassAttribute::attributeName_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2255): warning C4251: 'c10::ClassType::constantNames_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2256): warning C4251: 'c10::ClassType::constantValues_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2258): warning C4251: 'c10::ClassType::compilation_unit_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2261): warning C4251: 'c10::ClassType::attributes_': class 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassAttribute
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2188): note: see declaration of 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassAttribute
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2264): warning C4251: 'c10::ClassType::attributeTypes_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2267): warning C4251: 'c10::ClassType::methods_': class 'std::vector<torch::jit::Function *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=torch::jit::Function *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1973): note: see declaration of 'std::vector<torch::jit::Function *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Function *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): warning C4251: 'c10::ClassType::properties_': class 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassType::Property
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): note: see declaration of 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassType::Property
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): warning C4251: 'c10::InterfaceType::methods_': class 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::InterfaceType'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): note: see declaration of 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(168): warning C4251: 'c10::ivalue::ConstantString::str_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::ConstantString'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(188): warning C4251: 'c10::ivalue::Tuple::elements_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(189): warning C4251: 'c10::ivalue::Tuple::type_': class 'std::shared_ptr<c10::TupleType>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1090): note: see declaration of 'std::shared_ptr<c10::TupleType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): note: see declaration of 'c10::ivalue::Future::FutureError'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(264): warning C4251: 'c10::ivalue::Future::FutureError::error_msg': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(461): warning C4251: 'c10::ivalue::Future::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(462): warning C4251: 'c10::ivalue::Future::completed_': struct 'std::atomic<bool>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(463): warning C4251: 'c10::ivalue::Future::finished_cv_': class 'std::condition_variable' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(682): note: see declaration of 'std::condition_variable'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(466): warning C4251: 'c10::ivalue::Future::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): warning C4251: 'c10::ivalue::Future::callbacks_': class 'std::vector<std::function<void (void)>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
          with
          [
              _Ty=std::function<void (void)>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): note: see declaration of 'std::vector<std::function<void (void)>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::function<void (void)>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(468): warning C4251: 'c10::ivalue::Future::eptr_': class 'std::exception_ptr' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\exception(239): note: see declaration of 'std::exception_ptr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(389): warning C4101: 'e': unreferenced local variable
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(565): warning C4251: 'c10::ivalue::Object::slots_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Object'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(648): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(650): warning C4244: 'return': conversion from 'int64_t' to 'unsigned char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(651): warning C4244: 'return': conversion from 'int64_t' to 'signed char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(652): warning C4244: 'return': conversion from 'int64_t' to 'unsigned short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(653): warning C4244: 'return': conversion from 'int64_t' to 'short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(654): warning C4244: 'return': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(655): warning C4244: 'return': conversion from 'int64_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(657): warning C4244: 'return': conversion from 'int64_t' to 'c10::detail::_guarded_unsigned_long', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(40): warning C4251: 'at::namedinference::TensorName::origin_': class 'c10::ArrayRef<at::Dimname>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorName'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dimname.h(36): note: see declaration of 'c10::ArrayRef<at::Dimname>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(70): warning C4251: 'at::namedinference::TensorNames::names_': class 'c10::SmallVector<at::namedinference::TensorName,10>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorNames'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(49): note: see declaration of 'c10::SmallVector<at::namedinference::TensorName,10>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(190): warning C4251: 'torch::autograd::AutogradMeta::name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(193): warning C4251: 'torch::autograd::AutogradMeta::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(194): warning C4251: 'torch::autograd::AutogradMeta::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(196): warning C4251: 'torch::autograd::AutogradMeta::hooks_': class 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(174): note: see declaration of 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(197): warning C4251: 'torch::autograd::AutogradMeta::cpp_hooks_list': class 'std::shared_ptr<torch::autograd::hooks_list>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\cpp_hook.h(11): note: see declaration of 'std::shared_ptr<torch::autograd::hooks_list>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(216): warning C4251: 'torch::autograd::AutogradMeta::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): warning C4251: 'torch::autograd::DifferentiableViewMeta::view_fn_': class 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::DifferentiableViewMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): note: see declaration of 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): note: see declaration of 'torch::jit::GraphAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(121): warning C4251: 'torch::jit::GraphAttr::value_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphsAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): note: see declaration of 'torch::jit::GraphsAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(138): warning C4251: 'torch::jit::GraphsAttr::value_': class 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphsAttr'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(125): note: see declaration of 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(176): warning C4251: 'torch::jit::SourceRange::source_': class 'std::shared_ptr<torch::jit::Source>' needs to have dll-interface to be used by clients of struct 'torch::jit::SourceRange'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(110): note: see declaration of 'std::shared_ptr<torch::jit::Source>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(25): warning C4251: 'torch::jit::Scope::parent_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Scope'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): warning C4251: 'torch::jit::InlinedCallStack::callee_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::InlinedCallStack'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): warning C4275: non dll-interface class 'std::runtime_error' used as base for dll-interface struct 'torch::jit::constant_not_supported_error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\stdexcept(157): note: see declaration of 'std::runtime_error'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): note: see declaration of 'torch::jit::constant_not_supported_error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): warning C4251: 'c10::KernelFunction::functor_': class 'std::shared_ptr<c10::OperatorKernel>' needs to have dll-interface to be used by clients of class 'c10::KernelFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): note: see declaration of 'std::shared_ptr<c10::OperatorKernel>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(191): warning C4251: 'c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_': struct 'c10::utils::bitset' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bitset.h(23): note: see declaration of 'c10::utils::bitset'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(194): warning C4251: 'c10::DispatchKeyExtractor::nonFallthroughKeys_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\cppsignature.h(52): warning C4251: 'c10::impl::CppSignature::signature_': class 'std::type_index' needs to have dll-interface to be used by clients of class 'c10::impl::CppSignature'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\typeindex(16): note: see declaration of 'std::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(185): warning C4251: 'c10::impl::OperatorEntry::name_': struct 'c10::OperatorName' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\operator_name.h(14): note: see declaration of 'c10::OperatorName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): warning C4251: 'c10::impl::OperatorEntry::schema_': class 'c10::optional<c10::impl::AnnotatedSchema>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): note: see declaration of 'c10::optional<c10::impl::AnnotatedSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): warning C4251: 'c10::impl::OperatorEntry::manuallyBoxedKernel_': class 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): note: see declaration of 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): warning C4251: 'c10::impl::OperatorEntry::kernels_': class 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): note: see declaration of 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(230): warning C4251: 'c10::impl::OperatorEntry::catchAllKernel_': class 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(117): note: see declaration of 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(231): warning C4251: 'c10::impl::OperatorEntry::missingKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(232): warning C4251: 'c10::impl::OperatorEntry::ambiguousAutogradOtherKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(239): warning C4251: 'c10::impl::OperatorEntry::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): warning C4251: 'at::StringView::owned_str_ptr_': class 'std::shared_ptr<std::string>' needs to have dll-interface to be used by clients of struct 'at::StringView'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): note: see declaration of 'std::shared_ptr<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(196): warning C4251: 'at::RecordFunction::sorted_active_tls_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(197): warning C4251: 'at::RecordFunction::sorted_active_global_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(201): warning C4251: 'at::RecordFunction::tls_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(205): warning C4251: 'at::RecordFunction::global_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(214): warning C4251: 'at::RecordFunction::inputs_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(339): warning C4251: 'at::RecordFunctionCallback::start_': class 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(256): note: see declaration of 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(340): warning C4251: 'at::RecordFunctionCallback::end_': class 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(257): note: see declaration of 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(341): warning C4251: 'at::RecordFunctionCallback::should_run_': class 'std::function<bool (const at::RecordFunctionCallback &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(306): note: see declaration of 'std::function<bool (const at::RecordFunctionCallback &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(494): warning C4251: 'at::RecordFunctionTLS::sorted_tls_callbacks_': class 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunctionTLS'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(400): note: see declaration of 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): warning C4251: 'c10::Dispatcher::operators_': class 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): note: see declaration of 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): warning C4251: 'c10::Dispatcher::operatorLookupTable_': class 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): note: see declaration of 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): warning C4251: 'c10::Dispatcher::libraries_': class 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): note: see declaration of 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): warning C4251: 'c10::Dispatcher::listeners_': class 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): note: see declaration of 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(240): warning C4251: 'c10::Dispatcher::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(305): warning C4251: 'c10::OperatorHandle::operatorIterator_': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' needs to have dll-interface to be used by clients of class 'c10::OperatorHandle'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\list(457): note: see declaration of 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): warning C4251: 'c10::RegisterOperators::Options::schemaOrName_': class 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): note: see declaration of 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): warning C4251: 'c10::RegisterOperators::Options::kernels': class 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): note: see declaration of 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(430): warning C4251: 'c10::RegisterOperators::Options::aliasAnalysisKind_': class 'c10::optional<c10::AliasAnalysisKind>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(190): note: see declaration of 'c10::optional<c10::AliasAnalysisKind>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): warning C4251: 'c10::RegisterOperators::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(179): warning C4251: 'torch::CppFunction::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(181): warning C4251: 'torch::CppFunction::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(182): warning C4251: 'torch::CppFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(183): warning C4251: 'torch::CppFunction::debug_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(585): warning C4251: 'torch::Library::ns_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(586): warning C4251: 'torch::Library::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(590): warning C4251: 'torch::Library::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::Library'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): warning C4251: 'torch::jit::Operator::op_': class 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>' needs to have dll-interface to be used by clients of struct 'torch::jit::Operator'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): note: see declaration of 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(260): warning C4251: 'torch::jit::Node::inputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(261): warning C4251: 'torch::jit::Node::outputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): warning C4251: 'torch::jit::Node::blocks_': class 'std::vector<torch::jit::Block *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Block *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): note: see declaration of 'std::vector<torch::jit::Block *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Block *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(266): warning C4251: 'torch::jit::Node::source_range_': class 'c10::optional<torch::jit::SourceRange>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(85): note: see declaration of 'c10::optional<torch::jit::SourceRange>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(267): warning C4251: 'torch::jit::Node::scope_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(268): warning C4251: 'torch::jit::Node::callstack_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): warning C4251: 'torch::jit::Node::values_': class 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): note: see declaration of 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(1365): warning C4251: 'torch::jit::ProfileOptionalOp::callback_': class 'std::function<void (torch::jit::Stack &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::ProfileOptionalOp'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\builtin_function.h(13): note: see declaration of 'std::function<void (torch::jit::Stack &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): warning C4251: 'torch::jit::ArgumentSpecCreator::instructions_': class 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::ArgumentSpecCreator'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): note: see declaration of 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'const int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(241): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(260): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(432): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\threadlocalstate.h(31): warning C4251: 'at::ThreadLocalState::debug_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'at::ThreadLocalState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): warning C4251: 'torch::jit::Code::pImpl': class 'std::shared_ptr<torch::jit::CodeImpl>' needs to have dll-interface to be used by clients of struct 'torch::jit::Code'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): note: see declaration of 'std::shared_ptr<torch::jit::CodeImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): warning C4251: 'torch::jit::GraphExecutor::pImpl': class 'std::shared_ptr<torch::jit::GraphExecutorImplBase>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphExecutor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): note: see declaration of 'std::shared_ptr<torch::jit::GraphExecutorImplBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(115): warning C4251: 'torch::jit::GraphFunction::name_': struct 'c10::QualifiedName' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\qualified_name.h(11): note: see declaration of 'c10::QualifiedName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(117): warning C4251: 'torch::jit::GraphFunction::graph_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): warning C4251: 'torch::jit::GraphFunction::optimized_graph_': class 'c10::optional<std::shared_ptr<torch::jit::Graph>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): note: see declaration of 'c10::optional<std::shared_ptr<torch::jit::Graph>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(129): warning C4251: 'torch::jit::GraphFunction::compile_mutex': class 'std::recursive_mutex' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(95): note: see declaration of 'std::recursive_mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(136): warning C4251: 'torch::jit::GraphFunction::function_creator_': class 'std::function<void (torch::jit::GraphFunction &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(15): note: see declaration of 'std::function<void (torch::jit::GraphFunction &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(141): warning C4251: 'torch::jit::GraphFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\method.h(57): warning C4251: 'torch::jit::Method::owner_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Method'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\object.h(136): warning C4251: 'torch::jit::Object::_ivalue_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Object'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(43): warning C4251: 'std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::jit::tracer::TracingState>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(47): warning C4251: 'torch::jit::tracer::TracingState::graph': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(52): warning C4251: 'torch::jit::tracer::TracingState::lookup_var_name_fn': class 'std::function<std::string (const torch::autograd::Variable &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(51): note: see declaration of 'std::function<std::string (const torch::autograd::Variable &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): warning C4251: 'torch::jit::tracer::TracingState::env_stack': class 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): note: see declaration of 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(181): warning C4251: 'torch::jit::tracer::NoWarn::state': class 'std::shared_ptr<_Ty>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::NoWarn'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2019): note: see declaration of 'std::shared_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(96): warning C4251: 'torch::data::samplers::DistributedRandomSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedRandomSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(129): warning C4251: 'torch::data::samplers::DistributedSequentialSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedSequentialSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): warning C4251: 'torch::jit::CompilationUnit::functions_': class 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=torch::jit::Function
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): note: see declaration of 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::jit::Function
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): warning C4251: 'torch::jit::CompilationUnit::dict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(291): warning C4251: 'torch::jit::CompilationUnit::classDict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): warning C4251: 'torch::jit::CompilationUnit::classes_': class 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): note: see declaration of 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\input-archive.h(110): warning C4251: 'torch::serialize::InputArchive::hierarchy_prefix_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::serialize::InputArchive'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\output-archive.h(76): warning C4251: 'torch::serialize::OutputArchive::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of class 'torch::serialize::OutputArchive'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(64): warning C4251: 'std::enable_shared_from_this<torch::nn::Module>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::nn::Module>'
          with
          [
              _Ty=torch::nn::Module
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::nn::Module
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(543): warning C4251: 'torch::nn::Module::parameters_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(591): warning C4251: 'torch::nn::Module::buffers_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(594): warning C4251: 'torch::nn::Module::children_': class 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(248): note: see declaration of 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(597): warning C4251: 'torch::nn::Module::name_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(24): warning C4251: 'torch::nn::BatchNormOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::BatchNormOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(81): warning C4251: 'torch::nn::functional::BatchNormFuncOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::BatchNormFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(25): warning C4251: 'torch::nn::EmbeddingOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(27): warning C4251: 'torch::nn::EmbeddingOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(46): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(48): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(70): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(72): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(101): warning C4251: 'torch::nn::EmbeddingBagOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(109): warning C4251: 'torch::nn::EmbeddingBagOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(128): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(136): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(162): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(170): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(25): warning C4251: 'torch::nn::FoldOptions::output_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(28): warning C4251: 'torch::nn::FoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(32): warning C4251: 'torch::nn::FoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(36): warning C4251: 'torch::nn::FoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(39): warning C4251: 'torch::nn::FoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(69): warning C4251: 'torch::nn::UnfoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(73): warning C4251: 'torch::nn::UnfoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(77): warning C4251: 'torch::nn::UnfoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(80): warning C4251: 'torch::nn::UnfoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(223): warning C4251: 'torch::nn::functional::SoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(263): warning C4251: 'torch::nn::functional::SoftminFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftminFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(303): warning C4251: 'torch::nn::functional::LogSoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LogSoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(65): warning C4251: 'torch::nn::UnflattenOptions::dimname_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(67): warning C4251: 'torch::nn::UnflattenOptions::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(69): warning C4251: 'torch::nn::UnflattenOptions::namedshape_': class 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(56): note: see declaration of 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(643): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(665): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(675): warning C4244: '=': conversion from 'T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(23): warning C4251: 'torch::nn::L1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::L1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(55): warning C4251: 'torch::nn::KLDivLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>' needs to have dll-interface to be used by clients of struct 'torch::nn::KLDivLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(49): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(90): warning C4251: 'torch::nn::MSELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MSELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(122): warning C4251: 'torch::nn::BCELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(154): warning C4251: 'torch::nn::HingeEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::HingeEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(195): warning C4251: 'torch::nn::MultiMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(228): warning C4251: 'torch::nn::CosineEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CosineEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(262): warning C4251: 'torch::nn::MultiLabelMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(296): warning C4251: 'torch::nn::SoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(333): warning C4251: 'torch::nn::MultiLabelSoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelSoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(372): warning C4251: 'torch::nn::TripletMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::TripletMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(403): warning C4251: 'torch::nn::CTCLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CTCLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(441): warning C4251: 'torch::nn::SmoothL1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SmoothL1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(479): warning C4251: 'torch::nn::PoissonNLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::PoissonNLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(510): warning C4251: 'torch::nn::MarginRankingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MarginRankingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(546): warning C4251: 'torch::nn::NLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::NLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(581): warning C4251: 'torch::nn::CrossEntropyLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CrossEntropyLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(612): warning C4251: 'torch::nn::BCEWithLogitsLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCEWithLogitsLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(20): warning C4251: 'torch::nn::LayerNormOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::LayerNormOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(43): warning C4251: 'torch::nn::functional::LayerNormFuncOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LayerNormFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(133): warning C4251: 'torch::nn::functional::NormalizeFuncOptions::out_': class 'c10::optional<at::Tensor>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::NormalizeFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(561): note: see declaration of 'c10::optional<at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(23): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<D>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see reference to class template instantiation 'c10::ArrayRef<int64_t>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(57): note: see reference to class template instantiation 'std::initializer_list<c10::DispatchKey>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(55): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(95): warning C4251: 'torch::nn::ZeroPad2dOptions::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ZeroPad2dOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(115): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(162): warning C4251: 'torch::nn::functional::PadFuncOptions::pad_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(165): warning C4251: 'torch::nn::functional::PadFuncOptions::mode_': class 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(153): note: see declaration of 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\padding.h(14): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(963): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(964): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(23): warning C4251: 'torch::nn::UpsampleOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): warning C4251: 'torch::nn::UpsampleOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(36): warning C4251: 'torch::nn::UpsampleOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(30): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(42): warning C4251: 'torch::nn::UpsampleOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(64): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(67): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(71): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(55): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(82): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(93): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(24): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::mode_': class 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(20): note: see declaration of 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(26): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::padding_mode_': class 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(21): note: see declaration of 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(28): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(94): warning C4251: 'torch::nn::FunctionalImpl::function_': class 'std::function<at::Tensor (at::Tensor)>' needs to have dll-interface to be used by clients of class 'torch::nn::FunctionalImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): note: see declaration of 'std::function<at::Tensor (at::Tensor)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\adaptive.h(26): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::AdaptiveLogSoftmaxWithLossOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(71): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(81): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::head': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(83): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(44): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(69): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(115): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(140): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(165): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(248): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(273): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(298): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options': struct 'torch::nn::AvgPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(42): note: see declaration of 'torch::nn::AvgPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(44): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options': struct 'torch::nn::AvgPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(50): note: see declaration of 'torch::nn::AvgPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(70): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options': struct 'torch::nn::AvgPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(58): note: see declaration of 'torch::nn::AvgPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(96): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options': struct 'torch::nn::MaxPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(132): note: see declaration of 'torch::nn::MaxPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(141): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options': struct 'torch::nn::MaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(140): note: see declaration of 'torch::nn::MaxPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(171): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options': struct 'torch::nn::MaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(148): note: see declaration of 'torch::nn::MaxPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(201): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(227): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(239): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(201): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(255): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(209): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(287): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(217): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(319): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(346): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(358): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(270): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(278): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(402): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(286): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(430): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(354): note: see declaration of 'torch::nn::MaxUnpoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(476): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(362): note: see declaration of 'torch::nn::MaxUnpoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(505): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(370): note: see declaration of 'torch::nn::MaxUnpoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(534): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(581): warning C4251: 'torch::nn::FractionalMaxPool2dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool2dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(452): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(624): warning C4251: 'torch::nn::FractionalMaxPool3dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool3dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(460): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options': struct 'torch::nn::LPPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(510): note: see declaration of 'torch::nn::LPPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(667): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options': struct 'torch::nn::LPPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(518): note: see declaration of 'torch::nn::LPPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(695): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(23): warning C4251: 'torch::nn::detail::RNNOptionsBase::mode_': class 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::detail::RNNOptionsBase'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(15): note: see declaration of 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(66): warning C4251: 'torch::nn::RNNOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(179): warning C4251: 'torch::nn::RNNCellOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNCellOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(99): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(143): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(193): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(821): warning C4251: 'torch::nn::MultiheadAttentionImpl::out_proj': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::MultiheadAttentionImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(338): warning C4251: 'torch::autograd::profiler::Event::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\wrapdimutils.h(25): note: see declaration of 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(342): warning C4251: 'torch::autograd::profiler::Event::cuda_event': class 'std::shared_ptr<CUevent_st>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(24): note: see declaration of 'std::shared_ptr<CUevent_st>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(348): warning C4251: 'torch::autograd::profiler::Event::stack_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(189): warning C4244: 'initializing': conversion from 'double' to 'int64_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): warning C4251: 'torch::autograd::profiler::RecordProfile::file_': class 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::RecordProfile'
          with
          [
              _Ty=std::ofstream
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): note: see declaration of 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>'
          with
          [
              _Ty=std::ofstream
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(456): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::cb_': class 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(436): note: see declaration of 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(457): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::profilerDisableOptions_': class 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(395): note: see declaration of 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(47): warning C4251: 'torch::autograd::SavedVariable::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(50): warning C4251: 'torch::autograd::SavedVariable::weak_grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(51): warning C4251: 'torch::autograd::SavedVariable::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(98): warning C4251: 'std::enable_shared_from_this<torch::autograd::Node>::_Wptr': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::autograd::Node>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(426): warning C4251: 'torch::autograd::Node::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(428): warning C4251: 'torch::autograd::Node::next_edges_': class 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::Edge
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(33): note: see declaration of 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::Edge
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): warning C4251: 'torch::autograd::Node::anomaly_metadata_': class 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): note: see declaration of 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(431): warning C4251: 'torch::autograd::Node::pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(336): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(432): warning C4251: 'torch::autograd::Node::post_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(312): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): warning C4251: 'torch::autograd::Node::input_metadata_': class 'c10::SmallVector<torch::autograd::InputMetadata,2>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): note: see declaration of 'c10::SmallVector<torch::autograd::InputMetadata,2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(173): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(179): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(186): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(192): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(247): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): warning C4251: 'torch::autograd::AutogradContext::saved_data': class 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): note: see declaration of 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(122): warning C4251: 'torch::autograd::AutogradContext::non_differentiable_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(123): warning C4251: 'torch::autograd::AutogradContext::dirty_inputs_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(124): warning C4251: 'torch::autograd::AutogradContext::saved_variables_': class 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(34): note: see declaration of 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(125): warning C4251: 'torch::autograd::AutogradContext::to_save_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(131): warning C4251: 'torch::autograd::AutogradContext::grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(147): warning C4251: 'torch::autograd::VariableInfo::size': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::VariableInfo'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(36): warning C4251: 'torch::nn::TransformerEncoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(67): warning C4251: 'torch::nn::TransformerDecoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(59): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(62): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(65): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(68): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(71): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(73): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(76): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(78): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(136): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(139): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(142): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(145): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::multihead_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(148): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(151): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(154): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(157): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(160): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(163): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout3': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(166): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm3': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(28): warning C4251: 'torch::nn::TransformerEncoderOptions::encoder_layer_': class 'torch::nn::TransformerEncoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(87): note: see declaration of 'torch::nn::TransformerEncoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(34): warning C4251: 'torch::nn::TransformerEncoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(57): warning C4251: 'torch::nn::TransformerDecoderOptions::decoder_layer_': class 'torch::nn::TransformerDecoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(185): note: see declaration of 'torch::nn::TransformerDecoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(63): warning C4251: 'torch::nn::TransformerDecoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(56): warning C4251: 'torch::nn::TransformerEncoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(59): warning C4251: 'torch::nn::TransformerEncoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(118): warning C4251: 'torch::nn::TransformerDecoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(121): warning C4251: 'torch::nn::TransformerDecoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(50): warning C4251: 'torch::nn::TransformerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(53): warning C4251: 'torch::nn::TransformerOptions::custom_encoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(56): warning C4251: 'torch::nn::TransformerOptions::custom_decoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(125): warning C4251: 'torch::nn::TransformerImpl::encoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(128): warning C4251: 'torch::nn::TransformerImpl::decoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(80): warning C4251: 'torch::optim::OptimizerParamGroup::params_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(81): warning C4251: 'torch::optim::OptimizerParamGroup::options_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(147): warning C4251: 'torch::optim::Optimizer::param_groups_': class 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(91): note: see declaration of 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(148): warning C4251: 'torch::optim::Optimizer::state_': class 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(135): note: see declaration of 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(149): warning C4251: 'torch::optim::Optimizer::defaults_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adam.h(25): warning C4251: 'torch::optim::AdamOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adamw.h(25): warning C4251: 'torch::optim::AdamWOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamWOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(21): warning C4251: 'torch::optim::LBFGSOptions::max_eval_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(25): warning C4251: 'torch::optim::LBFGSOptions::line_search_fn_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): warning C4251: 'torch::optim::LBFGSParamState::old_dirs_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(42): warning C4251: 'torch::optim::LBFGSParamState::old_stps_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(43): warning C4251: 'torch::optim::LBFGSParamState::ro_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): warning C4251: 'torch::optim::LBFGSParamState::al_': class 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): note: see declaration of 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(74): warning C4251: 'torch::optim::LBFGS::_numel_cache': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of class 'torch::optim::LBFGS'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\tata\utils\postprocessing.cpp(59): warning C4305: 'initializing': truncation from 'int' to 'int16_t'
f:\2023\ai\tata\utils\postprocessing.cpp(59): warning C4309: 'initializing': truncation of constant value
f:\2023\ai\tata\utils\postprocessing.cpp(60): warning C4305: 'initializing': truncation from 'int' to 'int16_t'
f:\2023\ai\tata\utils\postprocessing.cpp(60): warning C4309: 'initializing': truncation of constant value
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\optional.h(347): warning C4244: 'argument': conversion from '_Ty' to 'T', possible loss of data
          with
          [
              _Ty=unsigned __int64
          ]
          and
          [
              T=int
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,double>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,double>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  Preprocessing.cpp
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(28): note: see declaration of 'c10::Error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(30): warning C4251: 'c10::Error::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): warning C4251: 'c10::Error::context_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Error'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(40): warning C4251: 'c10::Error::backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(47): warning C4251: 'c10::Error::what_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(48): warning C4251: 'c10::Error::what_without_backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::Error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(54): warning C4251: 'c10::ThreadLocalDebugInfo::info_': class 'std::shared_ptr<c10::DebugInfoBase>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(35): note: see declaration of 'std::shared_ptr<c10::DebugInfoBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(56): warning C4251: 'c10::ThreadLocalDebugInfo::parent_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::ThreadLocalDebugInfo'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(82): warning C4251: 'c10::DebugInfoGuard::prev_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'c10::DebugInfoGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(22): warning C4251: 'c10::DataPtr::ptr_': class 'c10::detail::UniqueVoidPtr' needs to have dll-interface to be used by clients of class 'c10::DataPtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\uniquevoidptr.h(38): note: see declaration of 'c10::detail::UniqueVoidPtr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): warning C4251: 'c10::InefficientStdFunctionContext::ptr_': class 'std::unique_ptr<void,std::function<void (void *)>>' needs to have dll-interface to be used by clients of struct 'c10::InefficientStdFunctionContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\allocator.h(184): note: see declaration of 'std::unique_ptr<void,std::function<void (void *)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(550): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(556): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(563): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\llvmmathextras.h(569): warning C4267: 'return': conversion from 'size_t' to 'unsigned int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half.h(378): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(173): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(176): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(179): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(182): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(186): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(189): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(192): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(195): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(201): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(204): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(207): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(210): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(214): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(217): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(220): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\half-inl.h(223): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(148): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(151): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(154): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(157): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(161): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(164): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(167): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(170): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(176): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(179): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(182): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(185): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(189): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(192): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(195): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bfloat16-inl.h(198): warning C4244: 'argument': conversion from 'int64_t' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeid.h(68): warning C4251: 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_': struct 'c10::util::type_index' needs to have dll-interface to be used by clients of class 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typeindex.h(57): note: see declaration of 'c10::util::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(137): warning C4251: 'c10::Scalar::v': union 'c10::Scalar::v_t' needs to have dll-interface to be used by clients of class 'c10::Scalar'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(132): note: see declaration of 'c10::Scalar::v_t'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(66): warning C4251: 'c10::intrusive_ptr_target::refcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\intrusive_ptr.h(67): warning C4251: 'c10::intrusive_ptr_target::weakcount_': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of class 'c10::intrusive_ptr_target'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(151): warning C4251: 'c10::Storage::storage_impl_': class 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::Storage'
          with
          [
              TTarget=c10::StorageImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\storage.h(12): note: see declaration of 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::StorageImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(53): warning C4251: 'c10::impl::LocalDispatchKeySet::included_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(54): warning C4251: 'c10::impl::LocalDispatchKeySet::excluded_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::impl::LocalDispatchKeySet'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(77): warning C4251: 'c10::impl::IncludeDispatchKeyGuard::include_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::IncludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\impl\localdispatchkeyset.h(93): warning C4251: 'c10::impl::ExcludeDispatchKeyGuard::exclude_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of class 'c10::impl::ExcludeDispatchKeyGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\logging_is_not_google_glog.h(43): warning C4251: 'c10::MessageLogger::stream_': class 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'c10::MessageLogger'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\iosfwd(623): note: see declaration of 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): warning C4251: 'c10::VariableVersion::version_counter_': class 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'c10::VariableVersion'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(224): note: see declaration of 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1614): warning C4251: 'c10::TensorImpl::autograd_meta_': class 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(152): note: see declaration of 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::AutogradMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1617): warning C4251: 'c10::TensorImpl::named_tensor_meta_': class 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(171): note: see declaration of 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::NamedTensorMetaInterface
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): warning C4251: 'c10::TensorImpl::sizes_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1640): warning C4251: 'c10::TensorImpl::strides_': class 'c10::SmallVector<int64_t,5>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1639): note: see declaration of 'c10::SmallVector<int64_t,5>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1665): warning C4251: 'c10::TensorImpl::device_opt_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1672): warning C4251: 'c10::TensorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::TensorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1040): warning C4244: 'argument': conversion from 'float' to 'const _Ty', possible loss of data
          with
          [
              _Ty=uint64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensorimpl.h(1391): warning C4244: 'initializing': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(26): warning C4251: 'at::DeprecatedTypePropertiesRegistry::registry': class 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'at::DeprecatedTypePropertiesRegistry'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\deprecatedtypepropertiesregistry.h(24): note: see declaration of 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<_Ty>>'
          with
          [
              _Ty=at::DeprecatedTypeProperties
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(77): warning C4251: 'c10::GeneratorImpl::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(91): warning C4251: 'c10::GeneratorImpl::key_set_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::GeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\generator.h(120): warning C4251: 'at::Generator::impl_': class 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'at::Generator'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\generatorimpl.h(68): note: see declaration of 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::GeneratorImpl
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(67): warning C4251: 'at::NamedTensorMeta::names_': class 'std::vector<at::Dimname,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::NamedTensorMeta'
          with
          [
              _Ty=at::Dimname
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\namedtensor.h(33): note: see declaration of 'std::vector<at::Dimname,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Dimname
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1318): warning C4251: 'at::Tensor::impl_': class 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>' needs to have dll-interface to be used by clients of class 'at::Tensor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(87): note: see declaration of 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1319): warning C4522: 'at::Tensor': multiple assignment operators specified
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(32): warning C4251: 'at::CPUGeneratorImpl::engine_': class 'at::mt19937_engine' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\mt19937rngengine.h(108): note: see declaration of 'at::mt19937_engine'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(33): warning C4251: 'at::CPUGeneratorImpl::next_float_normal_sample_': class 'c10::optional<float>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(23): note: see declaration of 'c10::optional<float>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\cpugeneratorimpl.h(34): warning C4251: 'at::CPUGeneratorImpl::next_double_normal_sample_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'at::CPUGeneratorImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::DeviceIndex', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\stream.h(135): warning C4244: 'argument': conversion from 'unsigned __int64' to 'c10::StreamId', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(209): warning C4251: 'at::Context::thc_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(210): warning C4251: 'at::Context::thh_init': struct 'std::once_flag' needs to have dll-interface to be used by clients of class 'at::Context'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xcall_once.h(18): note: see declaration of 'std::once_flag'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): warning C4251: 'at::Context::quantized_engine': class 'c10::optional<c10::QEngine>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(223): note: see declaration of 'c10::optional<c10::QEngine>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(224): warning C4251: 'at::Context::thc_state': class 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\cudahooksinterface.h(76): note: see declaration of 'std::unique_ptr<THCState,void (__cdecl *)(THCState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\context.h(225): warning C4251: 'at::Context::thh_state': class 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>' needs to have dll-interface to be used by clients of class 'at::Context'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\detail\hiphooksinterface.h(33): note: see declaration of 'std::unique_ptr<THHState,void (__cdecl *)(THHState *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(56): warning C4251: 'at::TensorGeometry::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorgeometry.h(57): warning C4251: 'at::TensorGeometry::strides_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::TensorGeometry'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(869): warning C4251: 'c10::StrongTypePtr::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(870): warning C4251: 'c10::StrongTypePtr::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::StrongTypePtr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dict_inl.h(41): warning C4244: 'argument': conversion from 'int64_t' to 'const _Kty', possible loss of data
          with
          [
              _Kty=int
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(80): warning C4251: 'std::enable_shared_from_this<c10::Type>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<c10::Type>'
          with
          [
              _Ty=c10::Type
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=c10::Type
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(286): warning C4251: 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::OptionalType,c10::OptionalType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(370): warning C4251: 'c10::Stride::stride_index_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(371): warning C4251: 'c10::Stride::contiguous_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(372): warning C4251: 'c10::Stride::stride_': class 'c10::optional<size_t>' needs to have dll-interface to be used by clients of struct 'c10::Stride'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(360): note: see declaration of 'c10::optional<size_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(434): warning C4251: 'c10::ShapeSymbol::num_symbols': struct 'std::atomic<unsigned __int64>' needs to have dll-interface to be used by clients of struct 'c10::ShapeSymbol'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<unsigned __int64>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(525): warning C4251: 'c10::SymbolicShape::dims_': class 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::SymbolicShape'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(499): note: see declaration of 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::ShapeSymbol
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(833): warning C4251: 'c10::TensorType::scalar_type_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(834): warning C4251: 'c10::TensorType::device_': class 'c10::optional<c10::Device>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(21): note: see declaration of 'c10::optional<c10::Device>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(836): warning C4251: 'c10::TensorType::strides_': struct 'c10::VaryingShape<c10::Stride>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(623): note: see declaration of 'c10::VaryingShape<c10::Stride>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(837): warning C4251: 'c10::TensorType::requires_grad_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(849): warning C4251: 'c10::TensorType::undefined_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'c10::TensorType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(683): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(686): warning C4267: 'argument': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(857): warning C4251: 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(973): warning C4251: 'c10::DictType::types': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::DictType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(981): warning C4251: 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1023): warning C4251: 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1073): warning C4251: 'c10::NamedType::name_': class 'c10::optional<c10::QualifiedName>' needs to have dll-interface to be used by clients of struct 'c10::NamedType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1057): note: see declaration of 'c10::optional<c10::QualifiedName>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1156): warning C4251: 'c10::TupleType::elements_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1158): warning C4251: 'c10::TupleType::schema_': class 'std::shared_ptr<c10::FunctionSchema>' needs to have dll-interface to be used by clients of struct 'c10::TupleType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1124): note: see declaration of 'std::shared_ptr<c10::FunctionSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1240): warning C4251: 'c10::EnumType::value_type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1241): warning C4251: 'c10::EnumType::enum_names_values_': class 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
          with
          [
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::vector<c10::EnumNameValue,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1242): warning C4251: 'c10::EnumType::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::EnumType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1930): warning C4251: 'c10::ClassAttribute::attributeType_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1931): warning C4251: 'c10::ClassAttribute::attributeName_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ClassAttribute'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2255): warning C4251: 'c10::ClassType::constantNames_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2256): warning C4251: 'c10::ClassType::constantValues_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2258): warning C4251: 'c10::ClassType::compilation_unit_': class 'std::weak_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1170): note: see declaration of 'std::weak_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2261): warning C4251: 'c10::ClassType::attributes_': class 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassAttribute
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2188): note: see declaration of 'std::vector<c10::ClassAttribute,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassAttribute
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2264): warning C4251: 'c10::ClassType::attributeTypes_': class 'std::vector<c10::TypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::TypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(191): note: see declaration of 'std::vector<c10::TypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::TypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2267): warning C4251: 'c10::ClassType::methods_': class 'std::vector<torch::jit::Function *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=torch::jit::Function *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1973): note: see declaration of 'std::vector<torch::jit::Function *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Function *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): warning C4251: 'c10::ClassType::properties_': class 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ClassType'
          with
          [
              _Ty=c10::ClassType::Property
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2270): note: see declaration of 'std::vector<c10::ClassType::Property,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::ClassType::Property
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): warning C4251: 'c10::InterfaceType::methods_': class 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'c10::InterfaceType'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(2330): note: see declaration of 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<_Ty>>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(168): warning C4251: 'c10::ivalue::ConstantString::str_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::ConstantString'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(188): warning C4251: 'c10::ivalue::Tuple::elements_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(189): warning C4251: 'c10::ivalue::Tuple::type_': class 'std::shared_ptr<c10::TupleType>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Tuple'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\jit_type.h(1090): note: see declaration of 'std::shared_ptr<c10::TupleType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): warning C4275: non dll-interface class 'std::exception' used as base for dll-interface struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h(44): note: see declaration of 'std::exception'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(254): note: see declaration of 'c10::ivalue::Future::FutureError'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(264): warning C4251: 'c10::ivalue::Future::FutureError::error_msg': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future::FutureError'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(461): warning C4251: 'c10::ivalue::Future::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(462): warning C4251: 'c10::ivalue::Future::completed_': struct 'std::atomic<bool>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xxatomic(162): note: see declaration of 'std::atomic<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(463): warning C4251: 'c10::ivalue::Future::finished_cv_': class 'std::condition_variable' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(682): note: see declaration of 'std::condition_variable'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(466): warning C4251: 'c10::ivalue::Future::type_': class 'std::shared_ptr<c10::Type>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(26): note: see declaration of 'std::shared_ptr<c10::Type>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): warning C4251: 'c10::ivalue::Future::callbacks_': class 'std::vector<std::function<void (void)>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
          with
          [
              _Ty=std::function<void (void)>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(467): note: see declaration of 'std::vector<std::function<void (void)>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::function<void (void)>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(468): warning C4251: 'c10::ivalue::Future::eptr_': class 'std::exception_ptr' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Future'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\exception(239): note: see declaration of 'std::exception_ptr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(389): warning C4101: 'e': unreferenced local variable
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(565): warning C4251: 'c10::ivalue::Object::slots_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'c10::ivalue::Object'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(648): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(650): warning C4244: 'return': conversion from 'int64_t' to 'unsigned char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(651): warning C4244: 'return': conversion from 'int64_t' to 'signed char', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(652): warning C4244: 'return': conversion from 'int64_t' to 'unsigned short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(653): warning C4244: 'return': conversion from 'int64_t' to 'short', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(654): warning C4244: 'return': conversion from 'int64_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(655): warning C4244: 'return': conversion from 'int64_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue_inl.h(657): warning C4244: 'return': conversion from 'int64_t' to 'c10::detail::_guarded_unsigned_long', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(40): warning C4251: 'at::namedinference::TensorName::origin_': class 'c10::ArrayRef<at::Dimname>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorName'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dimname.h(36): note: see declaration of 'c10::ArrayRef<at::Dimname>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(70): warning C4251: 'at::namedinference::TensorNames::names_': class 'c10::SmallVector<at::namedinference::TensorName,10>' needs to have dll-interface to be used by clients of struct 'at::namedinference::TensorNames'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensornames.h(49): note: see declaration of 'c10::SmallVector<at::namedinference::TensorName,10>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(190): warning C4251: 'torch::autograd::AutogradMeta::name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(193): warning C4251: 'torch::autograd::AutogradMeta::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(194): warning C4251: 'torch::autograd::AutogradMeta::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(196): warning C4251: 'torch::autograd::AutogradMeta::hooks_': class 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(174): note: see declaration of 'std::vector<std::shared_ptr<torch::autograd::FunctionPreHook>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::autograd::FunctionPreHook>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(197): warning C4251: 'torch::autograd::AutogradMeta::cpp_hooks_list': class 'std::shared_ptr<torch::autograd::hooks_list>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\cpp_hook.h(11): note: see declaration of 'std::shared_ptr<torch::autograd::hooks_list>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(216): warning C4251: 'torch::autograd::AutogradMeta::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradMeta'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): warning C4251: 'torch::autograd::DifferentiableViewMeta::view_fn_': class 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::DifferentiableViewMeta'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(406): note: see declaration of 'c10::optional<std::function<at::Tensor (const at::Tensor &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(107): note: see declaration of 'torch::jit::GraphAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(121): warning C4251: 'torch::jit::GraphAttr::value_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): warning C4275: non dll-interface struct 'torch::jit::AttributeValue' used as base for dll-interface struct 'torch::jit::GraphsAttr'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(41): note: see declaration of 'torch::jit::AttributeValue'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(124): note: see declaration of 'torch::jit::GraphsAttr'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(138): warning C4251: 'torch::jit::GraphsAttr::value_': class 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphsAttr'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\attributes.h(125): note: see declaration of 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::shared_ptr<torch::jit::Graph>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(176): warning C4251: 'torch::jit::SourceRange::source_': class 'std::shared_ptr<torch::jit::Source>' needs to have dll-interface to be used by clients of struct 'torch::jit::SourceRange'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(110): note: see declaration of 'std::shared_ptr<torch::jit::Source>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(25): warning C4251: 'torch::jit::Scope::parent_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Scope'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): warning C4251: 'torch::jit::InlinedCallStack::callee_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::InlinedCallStack'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): warning C4275: non dll-interface class 'std::runtime_error' used as base for dll-interface struct 'torch::jit::constant_not_supported_error'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\stdexcept(157): note: see declaration of 'std::runtime_error'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\constants.h(20): note: see declaration of 'torch::jit::constant_not_supported_error'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): warning C4251: 'c10::KernelFunction::functor_': class 'std::shared_ptr<c10::OperatorKernel>' needs to have dll-interface to be used by clients of class 'c10::KernelFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\boxing\kernelfunction.h(231): note: see declaration of 'std::shared_ptr<c10::OperatorKernel>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(191): warning C4251: 'c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_': struct 'c10::utils::bitset' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\bitset.h(23): note: see declaration of 'c10::utils::bitset'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatchkeyextractor.h(194): warning C4251: 'c10::DispatchKeyExtractor::nonFallthroughKeys_': class 'c10::DispatchKeySet' needs to have dll-interface to be used by clients of struct 'c10::DispatchKeyExtractor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(34): note: see declaration of 'c10::DispatchKeySet'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\cppsignature.h(52): warning C4251: 'c10::impl::CppSignature::signature_': class 'std::type_index' needs to have dll-interface to be used by clients of class 'c10::impl::CppSignature'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\typeindex(16): note: see declaration of 'std::type_index'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(185): warning C4251: 'c10::impl::OperatorEntry::name_': struct 'c10::OperatorName' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\operator_name.h(14): note: see declaration of 'c10::OperatorName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): warning C4251: 'c10::impl::OperatorEntry::schema_': class 'c10::optional<c10::impl::AnnotatedSchema>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(186): note: see declaration of 'c10::optional<c10::impl::AnnotatedSchema>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): warning C4251: 'c10::impl::OperatorEntry::manuallyBoxedKernel_': class 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(195): note: see declaration of 'c10::optional<c10::KernelFunction::InternalBoxedKernelFunction (__cdecl *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): warning C4251: 'c10::impl::OperatorEntry::kernels_': class 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(228): note: see declaration of 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel,
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(230): warning C4251: 'c10::impl::OperatorEntry::catchAllKernel_': class 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(117): note: see declaration of 'std::list<c10::impl::AnnotatedKernel,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::impl::AnnotatedKernel
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(231): warning C4251: 'c10::impl::OperatorEntry::missingKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(232): warning C4251: 'c10::impl::OperatorEntry::ambiguousAutogradOtherKernel_': struct 'c10::impl::AnnotatedKernel' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(31): note: see declaration of 'c10::impl::AnnotatedKernel'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(239): warning C4251: 'c10::impl::OperatorEntry::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'c10::impl::OperatorEntry'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): warning C4251: 'at::StringView::owned_str_ptr_': class 'std::shared_ptr<std::string>' needs to have dll-interface to be used by clients of struct 'at::StringView'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(65): note: see declaration of 'std::shared_ptr<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(196): warning C4251: 'at::RecordFunction::sorted_active_tls_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(197): warning C4251: 'at::RecordFunction::sorted_active_global_handles_': class 'c10::SmallVector<uint64_t,4>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(80): note: see declaration of 'c10::SmallVector<uint64_t,4>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(201): warning C4251: 'at::RecordFunction::tls_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(205): warning C4251: 'at::RecordFunction::global_ctx_': class 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(81): note: see declaration of 'std::vector<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(214): warning C4251: 'at::RecordFunction::inputs_': class 'std::vector<c10::IValue,std::allocator<_Kty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunction'
          with
          [
              _Kty=c10::IValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\list.h(24): note: see declaration of 'std::vector<c10::IValue,std::allocator<_Kty>>'
          with
          [
              _Kty=c10::IValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(339): warning C4251: 'at::RecordFunctionCallback::start_': class 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
          with
          [
              _Ty=at::ObserverContext
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(256): note: see declaration of 'std::function<std::unique_ptr<at::ObserverContext,std::default_delete<_Ty>> (const at::RecordFunction &)>'
          with
          [
              _Ty=at::ObserverContext
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(340): warning C4251: 'at::RecordFunctionCallback::end_': class 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(257): note: see declaration of 'std::function<void (const at::RecordFunction &,at::ObserverContext *)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(341): warning C4251: 'at::RecordFunctionCallback::should_run_': class 'std::function<bool (const at::RecordFunctionCallback &)>' needs to have dll-interface to be used by clients of class 'at::RecordFunctionCallback'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(306): note: see declaration of 'std::function<bool (const at::RecordFunctionCallback &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(494): warning C4251: 'at::RecordFunctionTLS::sorted_tls_callbacks_': class 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'at::RecordFunctionTLS'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\record_function.h(400): note: see declaration of 'std::vector<std::pair<at::RecordFunctionCallback,at::CallbackHandle>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<at::RecordFunctionCallback,at::CallbackHandle>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): warning C4251: 'c10::Dispatcher::operators_': class 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(232): note: see declaration of 'std::list<c10::Dispatcher::OperatorDef,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): warning C4251: 'c10::Dispatcher::operatorLookupTable_': class 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(233): note: see declaration of 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>'
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): warning C4251: 'c10::Dispatcher::libraries_': class 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(235): note: see declaration of 'ska::flat_hash_map<std::string,std::string,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Kty=std::string,
              K=std::string,
              V=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): warning C4251: 'c10::Dispatcher::listeners_': class 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(239): note: see declaration of 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::detail::RegistrationListenerList
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(240): warning C4251: 'c10::Dispatcher::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of class 'c10::Dispatcher'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\dispatcher.h(305): warning C4251: 'c10::OperatorHandle::operatorIterator_': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' needs to have dll-interface to be used by clients of class 'c10::OperatorHandle'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\list(457): note: see declaration of 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): warning C4251: 'c10::RegisterOperators::Options::schemaOrName_': class 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(427): note: see declaration of 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): warning C4251: 'c10::RegisterOperators::Options::kernels': class 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(429): note: see declaration of 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegisterOperators::Options::KernelRegistrationConfig
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(430): warning C4251: 'c10::RegisterOperators::Options::aliasAnalysisKind_': class 'c10::optional<c10::AliasAnalysisKind>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators::Options'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(190): note: see declaration of 'c10::optional<c10::AliasAnalysisKind>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): warning C4251: 'c10::RegisterOperators::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'c10::RegisterOperators'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(179): warning C4251: 'torch::CppFunction::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(181): warning C4251: 'torch::CppFunction::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(121): note: see declaration of 'c10::optional<c10::impl::CppSignature>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(182): warning C4251: 'torch::CppFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(183): warning C4251: 'torch::CppFunction::debug_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::CppFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(585): warning C4251: 'torch::Library::ns_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(586): warning C4251: 'torch::Library::dispatch_key_': class 'c10::optional<c10::DispatchKey>' needs to have dll-interface to be used by clients of class 'torch::Library'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(119): note: see declaration of 'c10::optional<c10::DispatchKey>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\library.h(590): warning C4251: 'torch::Library::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::Library'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\op_registration\op_registration.h(581): note: see declaration of 'std::vector<c10::RegistrationHandleRAII,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::RegistrationHandleRAII
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): warning C4251: 'torch::jit::Operator::op_': class 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>' needs to have dll-interface to be used by clients of struct 'torch::jit::Operator'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\operator.h(195): note: see declaration of 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(260): warning C4251: 'torch::jit::Node::inputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(261): warning C4251: 'torch::jit::Node::outputs_': class 'std::vector<torch::jit::Value *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Value *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(138): note: see declaration of 'std::vector<torch::jit::Value *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Value *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): warning C4251: 'torch::jit::Node::blocks_': class 'std::vector<torch::jit::Block *,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Block *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(263): note: see declaration of 'std::vector<torch::jit::Block *,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Block *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(266): warning C4251: 'torch::jit::Node::source_range_': class 'c10::optional<torch::jit::SourceRange>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\source_range.h(85): note: see declaration of 'c10::optional<torch::jit::SourceRange>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(267): warning C4251: 'torch::jit::Node::scope_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              TTarget=torch::jit::Scope
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(20): note: see declaration of 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=torch::jit::Scope
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(268): warning C4251: 'torch::jit::Node::callstack_': class 'c10::optional<torch::jit::InlinedCallStackPtr>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\scope.h(87): note: see declaration of 'c10::optional<torch::jit::InlinedCallStackPtr>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): warning C4251: 'torch::jit::Node::values_': class 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Node'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(819): note: see declaration of 'std::vector<torch::jit::Node::AVPtr,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::Node::AVPtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\ir\ir.h(1365): warning C4251: 'torch::jit::ProfileOptionalOp::callback_': class 'std::function<void (torch::jit::Stack &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::ProfileOptionalOp'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\builtin_function.h(13): note: see declaration of 'std::function<void (torch::jit::Stack &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): warning C4251: 'torch::jit::ArgumentSpecCreator::instructions_': class 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::ArgumentSpecCreator'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(200): note: see declaration of 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::ArgumentSpecCreator::Inst
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(236): warning C4267: 'initializing': conversion from 'size_t' to 'const int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(241): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(260): warning C4244: '+=': conversion from 'int64_t' to 'int32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\argument_spec.h(432): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\threadlocalstate.h(31): warning C4251: 'at::ThreadLocalState::debug_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>' needs to have dll-interface to be used by clients of class 'at::ThreadLocalState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\threadlocaldebuginfo.h(38): note: see declaration of 'std::shared_ptr<c10::ThreadLocalDebugInfo>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): warning C4251: 'torch::jit::Code::pImpl': class 'std::shared_ptr<torch::jit::CodeImpl>' needs to have dll-interface to be used by clients of struct 'torch::jit::Code'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\interpreter.h(63): note: see declaration of 'std::shared_ptr<torch::jit::CodeImpl>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): warning C4251: 'torch::jit::GraphExecutor::pImpl': class 'std::shared_ptr<torch::jit::GraphExecutorImplBase>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphExecutor'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\runtime\graph_executor.h(85): note: see declaration of 'std::shared_ptr<torch::jit::GraphExecutorImplBase>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(115): warning C4251: 'torch::jit::GraphFunction::name_': struct 'c10::QualifiedName' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\qualified_name.h(11): note: see declaration of 'c10::QualifiedName'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(117): warning C4251: 'torch::jit::GraphFunction::graph_': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): warning C4251: 'torch::jit::GraphFunction::optimized_graph_': class 'c10::optional<std::shared_ptr<torch::jit::Graph>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(122): note: see declaration of 'c10::optional<std::shared_ptr<torch::jit::Graph>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(129): warning C4251: 'torch::jit::GraphFunction::compile_mutex': class 'std::recursive_mutex' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(95): note: see declaration of 'std::recursive_mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(136): warning C4251: 'torch::jit::GraphFunction::function_creator_': class 'std::function<void (torch::jit::GraphFunction &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(15): note: see declaration of 'std::function<void (torch::jit::GraphFunction &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\function_impl.h(141): warning C4251: 'torch::jit::GraphFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::GraphFunction'
          with
          [
              _Ty=c10::FunctionSchema
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\dispatch\operatorentry.h(32): note: see declaration of 'std::unique_ptr<c10::FunctionSchema,std::default_delete<_Ty>>'
          with
          [
              _Ty=c10::FunctionSchema
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\method.h(57): warning C4251: 'torch::jit::Method::owner_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Method'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\object.h(136): warning C4251: 'torch::jit::Object::_ivalue_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' needs to have dll-interface to be used by clients of struct 'torch::jit::Object'
          with
          [
              TTarget=c10::ivalue::Object
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(484): note: see declaration of 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'
          with
          [
              TTarget=c10::ivalue::Object
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(43): warning C4251: 'std::enable_shared_from_this<torch::jit::tracer::TracingState>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::jit::tracer::TracingState>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(47): warning C4251: 'torch::jit::tracer::TracingState::graph': class 'std::shared_ptr<torch::jit::Graph>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function.h(21): note: see declaration of 'std::shared_ptr<torch::jit::Graph>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(52): warning C4251: 'torch::jit::tracer::TracingState::lookup_var_name_fn': class 'std::function<std::string (const torch::autograd::Variable &)>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(51): note: see declaration of 'std::function<std::string (const torch::autograd::Variable &)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): warning C4251: 'torch::jit::tracer::TracingState::env_stack': class 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::TracingState'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(85): note: see declaration of 'std::vector<torch::jit::tracer::TracingState::Frame,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::jit::tracer::TracingState::Frame
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\frontend\tracer.h(181): warning C4251: 'torch::jit::tracer::NoWarn::state': class 'std::shared_ptr<_Ty>' needs to have dll-interface to be used by clients of struct 'torch::jit::tracer::NoWarn'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2019): note: see declaration of 'std::shared_ptr<_Ty>'
          with
          [
              _Ty=torch::jit::tracer::TracingState
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(96): warning C4251: 'torch::data::samplers::DistributedRandomSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedRandomSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\samplers\distributed.h(129): warning C4251: 'torch::data::samplers::DistributedSequentialSampler::all_indices_': class 'std::vector<T,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::data::samplers::DistributedSequentialSampler'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\arrayref.h(220): note: see declaration of 'std::vector<T,std::allocator<_Ty>>'
          with
          [
              T=size_t,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): warning C4251: 'torch::jit::CompilationUnit::functions_': class 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=torch::jit::Function
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(288): note: see declaration of 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::jit::Function
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): warning C4251: 'torch::jit::CompilationUnit::dict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(291): warning C4251: 'torch::jit::CompilationUnit::classDict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(290): note: see declaration of 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>'
          with
          [
              _Kty=c10::QualifiedName,
              _Ty=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): warning C4251: 'torch::jit::CompilationUnit::classes_': class 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::jit::CompilationUnit'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\jit\api\compilation_unit.h(298): note: see declaration of 'std::vector<c10::NamedTypePtr,std::allocator<_Ty>>'
          with
          [
              _Ty=c10::NamedTypePtr
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\input-archive.h(110): warning C4251: 'torch::serialize::InputArchive::hierarchy_prefix_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of class 'torch::serialize::InputArchive'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\serialize\output-archive.h(76): warning C4251: 'torch::serialize::OutputArchive::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>' needs to have dll-interface to be used by clients of class 'torch::serialize::OutputArchive'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(866): note: see declaration of 'std::shared_ptr<torch::jit::CompilationUnit>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(64): warning C4251: 'std::enable_shared_from_this<torch::nn::Module>::_Wptr': class 'std::weak_ptr<_Ty>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::nn::Module>'
          with
          [
              _Ty=torch::nn::Module
          ]
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\memory(2029): note: see declaration of 'std::weak_ptr<_Ty>'
          with
          [
              _Ty=torch::nn::Module
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(543): warning C4251: 'torch::nn::Module::parameters_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(591): warning C4251: 'torch::nn::Module::buffers_': class 'torch::OrderedDict<std::string,at::Tensor>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(212): note: see declaration of 'torch::OrderedDict<std::string,at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(594): warning C4251: 'torch::nn::Module::children_': class 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(248): note: see declaration of 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\module.h(597): warning C4251: 'torch::nn::Module::name_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of class 'torch::nn::Module'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(24): warning C4251: 'torch::nn::BatchNormOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::BatchNormOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(81): warning C4251: 'torch::nn::functional::BatchNormFuncOptions::momentum_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::BatchNormFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(25): warning C4251: 'torch::nn::EmbeddingOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(27): warning C4251: 'torch::nn::EmbeddingOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(46): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(48): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(70): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::padding_idx_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(72): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(101): warning C4251: 'torch::nn::EmbeddingBagOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(109): warning C4251: 'torch::nn::EmbeddingBagOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(128): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(136): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::EmbeddingBagFromPretrainedOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(162): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::max_norm_': class 'c10::optional<double>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(831): note: see declaration of 'c10::optional<double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(170): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::EmbeddingBagFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\embedding.h(85): note: see declaration of 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(43): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\embedding.h(123): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(25): warning C4251: 'torch::nn::FoldOptions::output_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(28): warning C4251: 'torch::nn::FoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(32): warning C4251: 'torch::nn::FoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(36): warning C4251: 'torch::nn::FoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(39): warning C4251: 'torch::nn::FoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::FoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(69): warning C4251: 'torch::nn::UnfoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(73): warning C4251: 'torch::nn::UnfoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(77): warning C4251: 'torch::nn::UnfoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\fold.h(80): warning C4251: 'torch::nn::UnfoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnfoldOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(223): warning C4251: 'torch::nn::functional::SoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(263): warning C4251: 'torch::nn::functional::SoftminFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::SoftminFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\activation.h(303): warning C4251: 'torch::nn::functional::LogSoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LogSoftmaxFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalartype.h(181): note: see declaration of 'c10::optional<c10::ScalarType>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(65): warning C4251: 'torch::nn::UnflattenOptions::dimname_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\xstring(4373): note: see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(67): warning C4251: 'torch::nn::UnflattenOptions::sizes_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(69): warning C4251: 'torch::nn::UnflattenOptions::namedshape_': class 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UnflattenOptions'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\linear.h(56): note: see declaration of 'std::vector<std::pair<std::string,int64_t>,std::allocator<_Ty>>'
          with
          [
              _Ty=std::pair<std::string,int64_t>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(643): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(665): warning C4244: '=': conversion from 'const T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\activation.h(675): warning C4244: '=': conversion from 'T' to 'int', possible loss of data
          with
          [
              T=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(23): warning C4251: 'torch::nn::L1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::L1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(55): warning C4251: 'torch::nn::KLDivLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>' needs to have dll-interface to be used by clients of struct 'torch::nn::KLDivLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(49): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(90): warning C4251: 'torch::nn::MSELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MSELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(122): warning C4251: 'torch::nn::BCELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCELossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(154): warning C4251: 'torch::nn::HingeEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::HingeEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(195): warning C4251: 'torch::nn::MultiMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(228): warning C4251: 'torch::nn::CosineEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CosineEmbeddingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(262): warning C4251: 'torch::nn::MultiLabelMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(296): warning C4251: 'torch::nn::SoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(333): warning C4251: 'torch::nn::MultiLabelSoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MultiLabelSoftMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(372): warning C4251: 'torch::nn::TripletMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::TripletMarginLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(403): warning C4251: 'torch::nn::CTCLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CTCLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(441): warning C4251: 'torch::nn::SmoothL1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::SmoothL1LossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(479): warning C4251: 'torch::nn::PoissonNLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::PoissonNLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(510): warning C4251: 'torch::nn::MarginRankingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::MarginRankingLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(546): warning C4251: 'torch::nn::NLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::NLLLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(581): warning C4251: 'torch::nn::CrossEntropyLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::CrossEntropyLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(612): warning C4251: 'torch::nn::BCEWithLogitsLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' needs to have dll-interface to be used by clients of struct 'torch::nn::BCEWithLogitsLossOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\loss.h(18): note: see declaration of 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(20): warning C4251: 'torch::nn::LayerNormOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::LayerNormOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(43): warning C4251: 'torch::nn::functional::LayerNormFuncOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::LayerNormFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\normalization.h(133): warning C4251: 'torch::nn::functional::NormalizeFuncOptions::out_': class 'c10::optional<at::Tensor>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::NormalizeFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(561): note: see declaration of 'c10::optional<at::Tensor>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(23): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<D>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see reference to class template instantiation 'c10::ArrayRef<int64_t>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\dispatchkeyset.h(57): note: see reference to class template instantiation 'std::initializer_list<c10::DispatchKey>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(55): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(95): warning C4251: 'torch::nn::ZeroPad2dOptions::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ZeroPad2dOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<D>::padding_': class 'torch::ExpandingArray<D*,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<D>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(16): note: see declaration of 'torch::ExpandingArray<D*,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(115): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<D>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(162): warning C4251: 'torch::nn::functional::PadFuncOptions::pad_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(165): warning C4251: 'torch::nn::functional::PadFuncOptions::mode_': class 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::PadFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(153): note: see declaration of 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\padding.h(14): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(963): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\pooling.h(964): warning C4244: 'initializing': conversion from '_Ty' to 'int', possible loss of data
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(23): warning C4251: 'torch::nn::UpsampleOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(26): warning C4251: 'torch::nn::UpsampleOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(36): warning C4251: 'torch::nn::UpsampleOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(30): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(42): warning C4251: 'torch::nn::UpsampleOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::UpsampleOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(64): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\tensorutils.h(149): note: see declaration of 'c10::optional<std::vector<int64_t,std::allocator<_Ty>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(67): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
          with
          [
              T=double,
              _Ty=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\ivalue.h(58): note: see declaration of 'c10::optional<std::vector<T,std::allocator<_Ty>>>'
          with
          [
              T=double,
              _Ty=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(71): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(55): note: see declaration of 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(82): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\upsampling.h(93): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::InterpolateFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(24): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::mode_': class 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(20): note: see declaration of 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(26): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::padding_mode_': class 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(21): note: see declaration of 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\vision.h(28): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::align_corners_': class 'c10::optional<bool>' needs to have dll-interface to be used by clients of struct 'torch::nn::functional::GridSampleFuncOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\tensoroptions.h(39): note: see declaration of 'c10::optional<bool>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(94): warning C4251: 'torch::nn::FunctionalImpl::function_': class 'std::function<at::Tensor (at::Tensor)>' needs to have dll-interface to be used by clients of class 'torch::nn::FunctionalImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): note: see declaration of 'std::function<at::Tensor (at::Tensor)>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\adaptive.h(26): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::nn::AdaptiveLogSoftmaxWithLossOptions'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(71): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(81): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::head': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(83): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(130): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(162): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(197): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<1>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(272): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<1,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(307): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<2,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(24): note: see declaration of 'torch::nn::detail::ConvNdOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\conv.h(342): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::ConvNdImpl<3,Derived>'
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
          and
          [
              _Ty=int64_t
          ]
          and
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(44): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(22): warning C4251: 'torch::nn::ReflectionPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReflectionPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): note: see reference to class template instantiation 'torch::nn::ReflectionPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(69): note: see reference to class template instantiation 'torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(115): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(140): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(54): warning C4251: 'torch::nn::ReplicationPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ReplicationPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(99): note: see reference to class template instantiation 'torch::nn::ReplicationPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(165): note: see reference to class template instantiation 'torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\functional\conv.h(63): note: see declaration of 'torch::ExpandingArray<2,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<1>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(248): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(90): note: see declaration of 'torch::ExpandingArray<4,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<2>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(273): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\padding.h(111): warning C4251: 'torch::nn::ConstantPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>' needs to have dll-interface to be used by clients of struct 'torch::nn::ConstantPadOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(87): note: see declaration of 'torch::ExpandingArray<6,int64_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(232): note: see reference to class template instantiation 'torch::nn::ConstantPadOptions<3>' being compiled
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\padding.h(298): note: see reference to class template instantiation 'torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options': struct 'torch::nn::AvgPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(42): note: see declaration of 'torch::nn::AvgPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(44): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options': struct 'torch::nn::AvgPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(50): note: see declaration of 'torch::nn::AvgPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(70): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28): warning C4251: 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options': struct 'torch::nn::AvgPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(58): note: see declaration of 'torch::nn::AvgPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(96): note: see reference to class template instantiation 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options': struct 'torch::nn::MaxPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(132): note: see declaration of 'torch::nn::MaxPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(141): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options': struct 'torch::nn::MaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(140): note: see declaration of 'torch::nn::MaxPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(171): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125): warning C4251: 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options': struct 'torch::nn::MaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(148): note: see declaration of 'torch::nn::MaxPoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(201): note: see reference to class template instantiation 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(227): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(239): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(201): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(255): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(209): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(287): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(238): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(217): note: see declaration of 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(319): note: see reference to class template instantiation 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(346): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(358): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(270): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(278): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(402): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(357): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' needs to have dll-interface to be used by clients of class 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(286): note: see declaration of 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(430): note: see reference to class template instantiation 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(354): note: see declaration of 'torch::nn::MaxUnpoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(476): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(362): note: see declaration of 'torch::nn::MaxUnpoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(505): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(460): warning C4251: 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(370): note: see declaration of 'torch::nn::MaxUnpoolOptions<3>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(534): note: see reference to class template instantiation 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(581): warning C4251: 'torch::nn::FractionalMaxPool2dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool2dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(452): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(624): warning C4251: 'torch::nn::FractionalMaxPool3dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<3>' needs to have dll-interface to be used by clients of class 'torch::nn::FractionalMaxPool3dImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(460): note: see declaration of 'torch::nn::FractionalMaxPoolOptions<3>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options': struct 'torch::nn::LPPoolOptions<1>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(510): note: see declaration of 'torch::nn::LPPoolOptions<1>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(667): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(651): warning C4251: 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options': struct 'torch::nn::LPPoolOptions<2>' needs to have dll-interface to be used by clients of class 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\pooling.h(518): note: see declaration of 'torch::nn::LPPoolOptions<2>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\pooling.h(695): note: see reference to class template instantiation 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(23): warning C4251: 'torch::nn::detail::RNNOptionsBase::mode_': class 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::detail::RNNOptionsBase'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(15): note: see declaration of 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(66): warning C4251: 'torch::nn::RNNOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(179): warning C4251: 'torch::nn::RNNCellOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' needs to have dll-interface to be used by clients of struct 'torch::nn::RNNCellOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\rnn.h(52): note: see declaration of 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<Derived>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<Derived>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(99): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(143): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(80): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(193): note: see reference to class template instantiation 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>' being compiled
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(81): note: see declaration of 'std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\rnn.h(82): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(821): warning C4251: 'torch::nn::MultiheadAttentionImpl::out_proj': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::MultiheadAttentionImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(338): warning C4251: 'torch::autograd::profiler::Event::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\wrapdimutils.h(25): note: see declaration of 'std::vector<std::vector<int64_t,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(342): warning C4251: 'torch::autograd::profiler::Event::cuda_event': class 'std::shared_ptr<CUevent_st>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(24): note: see declaration of 'std::shared_ptr<CUevent_st>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(348): warning C4251: 'torch::autograd::profiler::Event::stack_': class 'std::vector<std::string,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::Event'
          with
          [
              _Ty=std::string
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\exception.h(35): note: see declaration of 'std::vector<std::string,std::allocator<_Ty>>'
          with
          [
              _Ty=std::string
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(189): warning C4244: 'initializing': conversion from 'double' to 'int64_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): warning C4251: 'torch::autograd::profiler::RecordProfile::file_': class 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::RecordProfile'
          with
          [
              _Ty=std::ofstream
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(419): note: see declaration of 'std::unique_ptr<std::ofstream,std::default_delete<_Ty>>'
          with
          [
              _Ty=std::ofstream
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(456): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::cb_': class 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(436): note: see declaration of 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(457): warning C4251: 'torch::autograd::profiler::TLSProfilerGuard::profilerDisableOptions_': class 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>' needs to have dll-interface to be used by clients of struct 'torch::autograd::profiler::TLSProfilerGuard'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\profiler.h(395): note: see declaration of 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(47): warning C4251: 'torch::autograd::SavedVariable::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(1246): note: see declaration of 'std::shared_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(50): warning C4251: 'torch::autograd::SavedVariable::weak_grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\saved_variable.h(51): warning C4251: 'torch::autograd::SavedVariable::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'torch::autograd::SavedVariable'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(98): warning C4251: 'std::enable_shared_from_this<torch::autograd::Node>::_Wptr': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of class 'std::enable_shared_from_this<torch::autograd::Node>'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(426): warning C4251: 'torch::autograd::Node::mutex_': class 'std::mutex' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.16.27023\include\mutex(82): note: see declaration of 'std::mutex'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(428): warning C4251: 'torch::autograd::Node::next_edges_': class 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::Edge
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(33): note: see declaration of 'std::vector<torch::autograd::Edge,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::Edge
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): warning C4251: 'torch::autograd::Node::anomaly_metadata_': class 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(430): note: see declaration of 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::autograd::AnomalyMetadata
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(431): warning C4251: 'torch::autograd::Node::pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(336): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPreHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(432): warning C4251: 'torch::autograd::Node::post_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(312): note: see declaration of 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<_Ty>>,std::allocator<std::unique_ptr<_Ty,std::default_delete<_Ty>>>>'
          with
          [
              _Ty=torch::autograd::FunctionPostHook
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): warning C4251: 'torch::autograd::Node::input_metadata_': class 'c10::SmallVector<torch::autograd::InputMetadata,2>' needs to have dll-interface to be used by clients of struct 'torch::autograd::Node'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(433): note: see declaration of 'c10::SmallVector<torch::autograd::InputMetadata,2>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(173): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(179): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(186): warning C4267: 'initializing': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(192): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(247): warning C4267: 'return': conversion from 'size_t' to 'uint32_t', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): warning C4251: 'torch::autograd::AutogradContext::saved_data': class 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(98): note: see declaration of 'ska::flat_hash_map<std::string,c10::IValue,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=std::string,
              _Ty=c10::EnumNameValue
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(122): warning C4251: 'torch::autograd::AutogradContext::non_differentiable_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(123): warning C4251: 'torch::autograd::AutogradContext::dirty_inputs_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(13): note: see declaration of 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<_Kty>,std::allocator<_Ty>>'
          with
          [
              _Kty=c10::TensorImpl *,
              _Ty=c10::TensorImpl *
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(124): warning C4251: 'torch::autograd::AutogradContext::saved_variables_': class 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\function.h(34): note: see declaration of 'std::vector<torch::autograd::SavedVariable,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::autograd::SavedVariable
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(125): warning C4251: 'torch::autograd::AutogradContext::to_save_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(131): warning C4251: 'torch::autograd::AutogradContext::grad_fn_': class 'std::weak_ptr<torch::autograd::Node>' needs to have dll-interface to be used by clients of struct 'torch::autograd::AutogradContext'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\variable.h(118): note: see declaration of 'std::weak_ptr<torch::autograd::Node>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\autograd\custom_function.h(147): warning C4251: 'torch::autograd::VariableInfo::size': class 'std::vector<int64_t,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::autograd::VariableInfo'
          with
          [
              _Ty=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\memoryformat.h(56): note: see declaration of 'std::vector<int64_t,std::allocator<_Ty>>'
          with
          [
              _Ty=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(36): warning C4251: 'torch::nn::TransformerEncoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(67): warning C4251: 'torch::nn::TransformerDecoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderLayerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(59): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(62): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(65): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(68): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(71): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(73): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(76): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(78): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(136): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(139): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout1': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(142): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm1': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(145): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::multihead_attn': class 'torch::nn::MultiheadAttention' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\activation.h(833): note: see declaration of 'torch::nn::MultiheadAttention'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(148): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout2': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(151): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm2': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(154): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear1': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(157): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(160): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear2': class 'torch::nn::Linear' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): note: see declaration of 'torch::nn::Linear'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(163): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout3': class 'torch::nn::Dropout' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): note: see declaration of 'torch::nn::Dropout'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(166): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm3': class 'torch::nn::LayerNorm' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderLayerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\normalization.h(70): note: see declaration of 'torch::nn::LayerNorm'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(28): warning C4251: 'torch::nn::TransformerEncoderOptions::encoder_layer_': class 'torch::nn::TransformerEncoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(87): note: see declaration of 'torch::nn::TransformerEncoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(34): warning C4251: 'torch::nn::TransformerEncoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerEncoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(57): warning C4251: 'torch::nn::TransformerDecoderOptions::decoder_layer_': class 'torch::nn::TransformerDecoderLayer' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(185): note: see declaration of 'torch::nn::TransformerDecoderLayer'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(63): warning C4251: 'torch::nn::TransformerDecoderOptions::norm_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerDecoderOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(56): warning C4251: 'torch::nn::TransformerEncoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(59): warning C4251: 'torch::nn::TransformerEncoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerEncoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(118): warning C4251: 'torch::nn::TransformerDecoderImpl::layers': class 'torch::nn::ModuleList' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(253): note: see declaration of 'torch::nn::ModuleList'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(121): warning C4251: 'torch::nn::TransformerDecoderImpl::norm': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerDecoderImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(50): warning C4251: 'torch::nn::TransformerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(19): note: see declaration of 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(53): warning C4251: 'torch::nn::TransformerOptions::custom_encoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\options\transformer.h(56): warning C4251: 'torch::nn::TransformerOptions::custom_decoder_': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of struct 'torch::nn::TransformerOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(125): warning C4251: 'torch::nn::TransformerImpl::encoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\transformer.h(128): warning C4251: 'torch::nn::TransformerImpl::decoder': class 'torch::nn::AnyModule' needs to have dll-interface to be used by clients of class 'torch::nn::TransformerImpl'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): note: see declaration of 'torch::nn::AnyModule'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(80): warning C4251: 'torch::optim::OptimizerParamGroup::params_': class 'std::vector<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(644): note: see declaration of 'std::vector<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(81): warning C4251: 'torch::optim::OptimizerParamGroup::options_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::OptimizerParamGroup'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(147): warning C4251: 'torch::optim::Optimizer::param_groups_': class 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(91): note: see declaration of 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerParamGroup
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(148): warning C4251: 'torch::optim::Optimizer::state_': class 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(135): note: see declaration of 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<_Ty>>,std::hash<_Kty>,std::equal_to<_Kty>,std::allocator<std::pair<K,V>>>'
          with
          [
              _Ty=torch::optim::OptimizerParamState,
              _Kty=std::string,
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(149): warning C4251: 'torch::optim::Optimizer::defaults_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>' needs to have dll-interface to be used by clients of class 'torch::optim::Optimizer'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\optimizer.h(51): note: see declaration of 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<_Ty>>'
          with
          [
              _Ty=torch::optim::OptimizerOptions
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adam.h(25): warning C4251: 'torch::optim::AdamOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\adamw.h(25): warning C4251: 'torch::optim::AdamWOptions::betas_': class 'std::tuple<double,double>' needs to have dll-interface to be used by clients of struct 'torch::optim::AdamWOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(1183): note: see declaration of 'std::tuple<double,double>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(21): warning C4251: 'torch::optim::LBFGSOptions::max_eval_': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(25): warning C4251: 'torch::optim::LBFGSOptions::line_search_fn_': class 'c10::optional<std::string>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSOptions'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\nativefunctions.h(2110): note: see declaration of 'c10::optional<std::string>'
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): warning C4251: 'torch::optim::LBFGSParamState::old_dirs_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(42): warning C4251: 'torch::optim::LBFGSParamState::old_stps_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(43): warning C4251: 'torch::optim::LBFGSParamState::ro_': class 'std::deque<at::Tensor,std::allocator<_Ty>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(41): note: see declaration of 'std::deque<at::Tensor,std::allocator<_Ty>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): warning C4251: 'torch::optim::LBFGSParamState::al_': class 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>' needs to have dll-interface to be used by clients of struct 'torch::optim::LBFGSParamState'
          with
          [
              _Ty=at::Tensor
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(44): note: see declaration of 'c10::optional<std::vector<at::Tensor,std::allocator<_Ty>>>'
          with
          [
              _Ty=at::Tensor
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\torch\csrc\api\include\torch\optim\lbfgs.h(74): warning C4251: 'torch::optim::LBFGS::_numel_cache': class 'c10::optional<int64_t>' needs to have dll-interface to be used by clients of class 'torch::optim::LBFGS'
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\tensorbody.h(600): note: see declaration of 'c10::optional<int64_t>'
f:\2023\ai\tata\utils\preprocessing.cpp(57): warning C4305: 'initializing': truncation from 'double' to 'float'
f:\2023\ai\tata\utils\preprocessing.cpp(89): warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\optional.h(347): warning C4244: 'argument': conversion from '_Ty' to 'T', possible loss of data
          with
          [
              _Ty=unsigned __int64
          ]
          and
          [
              T=int
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\aten\core\function_schema.h(251): note: see reference to function template instantiation 'c10::optional<int32_t>::optional<size_t,false>(U &&)' being compiled
          with
          [
              U=size_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'T' to 'float', possible loss of data
          with
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'float', possible loss of data
          with
          [
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::BFloat16,double>(From,const char *)' being compiled
          with
          [
              To=c10::BFloat16,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): warning C4244: 'argument': conversion from 'src_t' to 'const T', possible loss of data
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,double>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=double
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(39): note: see reference to function template instantiation 'c10::complex<float>::complex<T>(const c10::complex<double> &)' being compiled
          with
          [
              T=float
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(37): note: while compiling class template member function 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to function template instantiation 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)' being compiled
          with
          [
              dest_t=c10::complex<float>,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(157): note: see reference to class template instantiation 'c10::static_cast_with_inter_type<To,From>' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\typecast.h(169): note: see reference to function template instantiation 'To c10::convert<To,From>(From)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
  f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\core\scalar.h(63): note: see reference to function template instantiation 'To c10::checked_convert<c10::complex<float>,c10::complex<double>>(From,const char *)' being compiled
          with
          [
              To=c10::complex<float>,
              From=c10::complex<double>
          ]
f:\2023\ai\dependencies\libtorch110_1.7.1\include\c10\util\complex.h(147): warning C4244: 'initializing': conversion from 'const T' to 'T', possible loss of data
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
     Creating library F:\2023\AI\x64\Release\tata.lib and object F:\2023\AI\x64\Release\tata.exp
  Generating code
f:\2023\ai\tata\regression.cpp(115): warning C4715: 'tata::Regression::run': not all control paths return a value
  All 1925 functions were compiled because no usable IPDB/IOBJ from previous compilation was found.
  Finished generating code
  tata.vcxproj -> F:\2023\AI\x64\Release\tata.dll
